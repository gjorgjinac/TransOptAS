,true_PSO,true_GA,true_DE,true_ES,pred_PSO,pred_GA,pred_DE,pred_ES
"1/(np.sum(2.737863624740629-array_x+np.round(6.400876150022076), axis=1))",0.0,0.009705434,0.036037683,1.0,0.47939023,0.0067342296,0.1467106,0.8133182
"10*(np.log(abs(np.mean(np.sqrt(abs(np.square(np.cos(2*np.pi*1.4673022418135035))+np.square(abs(4.8443878453388)*array_x))), axis=1))))",0.026694927,0.0,0.56124014,1.0,0.44479945,0.0064545055,0.80400014,0.8821291
"10*(np.round(3.964094445311643))+np.log(abs(np.log(abs(np.sum(array_x, axis=1)))))",0.9483582,0.41339245,0.61563665,0.14901844,0.8663263,0.14158207,0.83465713,0.62497264
"10*(np.sqrt(abs(np.sum(np.sqrt(abs(6.499486235280583))*array_x-7.193831784759095/array_x+1.7022023245505031, axis=1))))",1.0,0.013768309,0.24102147,0.38782755,0.5618046,0.03599204,0.39655888,0.7041618
"4.370104481195792+np.amax(np.round(np.cos(2*np.pi*3.415248582340174+array_x)), axis=1)",0.0,1.0,1.0,1.0,0.86908615,0.14764576,0.8316417,0.6172398
"4.50223922817088-np.sum(np.exp(5.017770280732983+np.cumsum(array_x, axis=1)), axis=1)",0.0015843837,0.014771059,0.09747603,1.0,0.80124784,0.08373415,0.5274916,0.6216399
"4.612588027171983+np.square(np.sum(abs(5.026373963425341+np.square(np.sin(2*np.pi*1.1759985595179123+array_x))), axis=1))+np.sin(2*np.pi*6.093416948477534+np.square(np.sum(abs(5.434165337023685+np.square(np.sin(2*np.pi*1.7727367491247135+array_x))), axis=1)))",0.05823774,0.0,0.3228103,1.0,0.66826385,0.019024745,0.38657594,0.8957494
"5.762834233603408+np.square(np.sum(np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))/4.741988545707255-array_x-np.round(4.4253539638369865))), axis=1))",0.37950203,0.0,0.6343849,1.0,0.54033494,0.011053787,0.26412597,0.8601843
"5.951686143362881/array_x[:,0]+8.57354034143656/abs(np.sqrt(abs(3.116182462225367))+np.mean(array_x, axis=1))/8.863753565650079",0.98864007,0.9998484,1.0,0.0,0.7934945,0.0088894265,0.7993518,0.9548744
"6.8364257177770575/np.amax(np.log(abs(1.9023768659812559))-array_x, axis=1)+np.sin(2*np.pi*5.982642054263427/np.amax(np.log(abs(4.066698454443239))-array_x, axis=1))",1.3616519e-05,3.0385136e-06,0.0,1.0,0.57378894,0.048920948,0.32144043,0.60559154
"8.855176222704/np.sum(abs(6.123590565147748/array_x), axis=1)-8.434209613836373",0.10514501,0.0,0.9882025,0.26227573,0.3502748,0.012886371,0.47992054,0.797658
"9.676648651443916+np.sin(2*np.pi*np.mean(array_x, axis=1))*5.13884004813691",1.0,0.0,0.09605949,0.0041918927,0.72071534,0.03988951,0.22816451,0.33449167
"abs(5.587248025840091-np.prod(-(array_x), axis=1))",0.70983845,0.0,0.5521575,0.479503,0.4325056,0.032677263,0.24346334,0.68069696
"abs(np.prod(6.377615756984854+np.sqrt(abs(array_x-np.round(9.718110849266278))), axis=1))",0.0,0.007518236,0.037992865,1.0,0.48494318,0.008738872,0.22342886,0.8572643
"abs(np.prod(np.cos(2*np.pi*abs(np.sqrt(abs(8.342308152015102))+array_x*np.square(np.round(5.661848300253088)))), axis=1)-5.519271965891938)",0.9972043,0.060864255,0.30980036,0.7006438,0.7930999,0.0109464815,0.7900971,0.94836277
"abs(np.sum(np.sin(2*np.pi*np.log(abs(4.641459744267939))+np.sqrt(abs(array_x))), axis=1))",0.5315959,0.0,0.7361266,1.0,0.66843873,0.015230195,0.21888812,0.8349725
"np.amax(np.exp(3.3479466627392056)+np.sqrt(abs(np.log(abs(array_x)))), axis=1)+np.sin(2*np.pi*np.amax(np.exp(5.32755299425321)+np.sqrt(abs(np.log(abs(array_x)))), axis=1))",0.0,0.50003344,0.23591538,0.46467748,0.752277,0.15430307,0.66583264,0.55716926
"np.amax(np.log(abs(np.sin(2*np.pi*array_x))), axis=1)+np.log(abs(5.2858634173812575))/4.153242736579513+np.sqrt(abs(np.cos(2*np.pi*np.amax(array_x-(np.array(range(1, array_x.shape[1]+1)))+array_x, axis=1))))",0.6900003,0.0,0.44383973,0.9295703,0.6561564,0.119176485,0.62282246,0.6203284
"np.amax(np.round(array_x)-8.680456881017847, axis=1)+np.sin(2*np.pi*np.amax(np.round(array_x)-9.759132712752445, axis=1))",1.0,0.0,0.33333334,0.0,0.62725616,0.028203351,0.845727,0.7487387
"np.amax(np.sqrt(abs(array_x*array_x*array_x*6.745655779387029-array_x-10*(9.353152610207383))), axis=1)",0.19177493,0.0,1.0,0.74202955,0.7372265,0.060493656,0.8168352,0.7143393
"np.cos(2*np.pi*np.sqrt(abs(np.mean(array_x-7.723736330206018*8.319537303515826, axis=1))))",0.0025761465,0.0049383175,0.020642582,1.0,0.82908,0.04186619,0.4405162,0.6312507
"np.cos(2*np.pi*np.square(np.sum(array_x*9.141163119894795, axis=1)))",1.0,0.0044483123,0.0,0.005867575,0.69206494,0.12283166,0.3474306,0.37165892
"np.exp(np.sin(2*np.pi*np.sum(array_x*8.01581184982065+3.5753351057104195+np.exp(9.505211614506742-array_x)/array_x, axis=1)))",0.068184815,0.17656305,0.44033018,0.0,0.65274495,0.034389775,0.1978632,0.3256602
"np.exp(np.sum(array_x-array_x-array_x, axis=1)+6.819884137207484*9.165026698952143)",0.0,0.003174586,0.0057086674,1.0,0.4513605,0.062034994,0.25307703,0.70254964
"np.log(abs(1/(np.mean(8.99705625250483-np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x), axis=1))))",0.95442003,0.0,0.22425406,0.8836193,0.6634295,0.022001967,0.5175308,0.8637108
"np.log(abs(array_x[:,0]*np.sum(array_x, axis=1)*-(np.sqrt(abs(5.67198933763393)))))+array_x[:,0]+9.55338572923901",0.8888358,0.0,0.8686182,0.86068654,0.49233612,0.029259462,0.50049037,0.79110247
"np.log(abs(np.amax(np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*8.69135402105805-array_x)/7.186136746074076, axis=1)))+np.sin(2*np.pi*9.762067386378254)",0.21543565,0.0,0.99188876,0.9101344,0.89433974,0.14408602,0.83918667,0.6343517
"np.log(abs(np.mean(abs(2.911712779461517)/np.log(abs(array_x)), axis=1)/7.21510337151959))",0.99922687,0.0,0.2663276,0.815743,0.8637711,0.08513956,0.7633423,0.76784825
"np.log(abs(np.mean(array_x+3.6825901148089804, axis=1)-1.522057622920041-np.square(6.613399802103635)-np.square(array_x[:,0]+4.010111164261131)))",0.0,0.014862345,0.0436881,1.0,0.64811957,0.09830449,0.33461654,0.43670282
"np.log(abs(np.sin(2*np.pi*8.852644935200058+np.sum(7.704068553423893+array_x, axis=1))))",1.0,0.14163893,0.3803102,0.077666186,0.8742632,0.14479513,0.8178448,0.6478603
"np.log(abs(np.sin(2*np.pi*np.log(abs(-(np.sum(np.square(8.802178081434489*np.cos(2*np.pi*np.sqrt(abs(array_x)))-7.5883436380038916), axis=1)))))))",1.0,0.0052086157,0.43872973,0.6167928,0.8203884,0.113473676,0.8277534,0.6472092
"np.log(abs(np.square(6.84613869565104-np.cos(2*np.pi*6.409762904143538)*np.square(8.497000262905672-np.sum(array_x, axis=1)))))",0.5255365,0.016757721,0.5617,0.20097762,0.60118383,0.12568128,0.34891206,0.51921123
"np.log(abs(np.sum(array_x, axis=1)))",1.0,0.40073055,0.56977344,0.0,0.7596953,0.070885226,0.79876673,0.7265879
"np.mean((np.array(range(1, array_x.shape[1]+1)))*4.779791745063356*9.504635536172373+np.exp(array_x)*np.sin(2*np.pi*array_x), axis=1)+10*(np.sin(2*np.pi*np.mean((np.array(range(1, array_x.shape[1]+1)))*4.21832319895202*2.507767698277684+np.exp(array_x)*np.sin(2*np.pi*array_x), axis=1)))",1.0,0.0,0.47803584,0.9509789,0.6212342,0.017788786,0.1997561,0.8334986
"np.mean((np.array(range(1, array_x.shape[1]+1)))+6.862676061640317/np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))+9.871688971825844/array_x+4.695378496569246))-np.cos(2*np.pi*np.sin(2*np.pi*np.exp(array_x))), axis=1)",0.7977467,0.0,0.75056183,1.0,0.53878826,0.038015034,0.4637874,0.7481883
"np.mean(-(10*(np.round(np.cos(2*np.pi*np.cos(2*np.pi*8.47998746063172-np.sqrt(abs(array_x))))))), axis=1)",0.0,0.0,0.0,1.0,0.6635184,0.021877266,0.6115327,0.87956154
"np.mean(-(np.cos(2*np.pi*5.377291721418011)+array_x/np.sqrt(abs(9.5357900476296-array_x))), axis=1)+np.sin(2*np.pi*np.mean(-(np.cos(2*np.pi*1.088888253727983)+array_x/np.sqrt(abs(3.4204067970211174-array_x))), axis=1))",1.0,0.0,0.3204914,0.80619496,0.57789993,0.04311432,0.23733185,0.7337949
"np.mean(-(np.sqrt(abs(8.921842591322687))*-(array_x)), axis=1)+np.sin(2*np.pi*np.mean(-(np.sqrt(abs(8.419431764816856))*-(array_x)), axis=1))",1.0,0.1219282,0.0,0.416357,0.49436975,0.011029803,0.13777523,0.8539224
"np.mean(-(np.square(np.cos(2*np.pi*np.sqrt(abs(array_x))+np.sin(2*np.pi*9.753069223743678)+5.890930703390489-np.cos(2*np.pi*array_x)))), axis=1)",0.7867281,0.0,0.26415923,0.99426097,0.63296527,0.024370711,0.26214322,0.8356957
"np.mean(1.1336935451645016+np.exp(array_x)-np.sqrt(abs(2.7680632652559627-array_x+4.003880485543914*(np.array(range(1, array_x.shape[1]+1)))*array_x+9.278449612183874)), axis=1)",1.0,0.0,0.0027657878,0.12588684,0.5203479,0.025650952,0.44164324,0.7290708
"np.mean(1.513231573102873-(np.array(range(1, array_x.shape[1]+1)))/np.square(array_x*6.752091418689502), axis=1)",0.9995963,0.0,1.0,0.9919119,0.8523547,0.14893347,0.81522846,0.6010561
"np.mean(1.5525650505802768+np.cos(2*np.pi*2.9722042806128828*array_x), axis=1)",1.0,0.0,0.33748117,0.8719346,0.68695754,0.020801673,0.6577294,0.8946816
"np.mean(1/(2.2782673046027964)-array_x+np.exp((np.array(range(1, array_x.shape[1]+1))))*9.90548580462671*3.298711333060859, axis=1)+np.sin(2*np.pi*np.mean(1/(2.807313366409316)-array_x+np.exp((np.array(range(1, array_x.shape[1]+1))))*9.589797671543733*4.007761267684479, axis=1))",1.0,0.0,4.7651865e-06,0.02139919,0.5020385,0.014020168,0.20316571,0.8554532
"np.mean(1/(np.log(abs(4.862825076003681))-abs(array_x))-3.520946086104481, axis=1)+np.sin(2*np.pi*np.mean(1/(np.log(abs(7.705612035487153))-abs(array_x))-6.975489616267944, axis=1))",0.98287636,0.0,1.0,0.9498698,0.715911,0.0053299423,0.68960434,0.95721346
"np.mean(1/(np.sqrt(abs(array_x+4.272502937131456))), axis=1)",0.0,0.021146202,0.061601955,1.0,0.5083183,0.04813819,0.3977637,0.7092798
"np.mean(1/(np.square(array_x)), axis=1)+10*(np.sin(2*np.pi*np.mean(1/(np.square(array_x)), axis=1)))",0.27777097,0.0,0.011207137,1.0,0.5357809,0.08344069,0.28171378,0.663077
"np.mean(1/(np.square(array_x+9.742566573220559)), axis=1)",0.0,0.018593844,0.057407536,1.0,0.4965488,0.008785817,0.42380756,0.8600218
"np.mean(10*(array_x)-4.944359328882475/array_x*1.4298871339232977, axis=1)",0.8131028,0.0,1.0,0.5937001,0.6993238,0.00454433,0.64401764,0.95947355
"np.mean(10*(array_x)-np.log(abs(array_x))*1.3301083313818336, axis=1)",0.0,0.0078023174,0.052311815,1.0,0.48740917,0.008739616,0.11547286,0.84007317
"np.mean(10*(np.log(abs(np.cos(2*np.pi*np.sqrt(abs(1/(array_x))))))), axis=1)",0.8503589,0.0,0.88686216,1.0,0.6198486,0.02650796,0.74551535,0.83637244
"np.mean(10*(np.square(4.419899482830171+array_x+array_x)/1.786797245610592-array_x/array_x-9.700668010006531-6.703347090204891), axis=1)",0.0075998977,0.009211855,0.63240945,1.0,0.51670146,0.008384893,0.36045855,0.8437378
"np.mean(10*(np.square(abs(4.304670355320234))-np.cos(2*np.pi*abs(np.square(np.square(6.72234979826625)+1.2267230252995334*np.square(array_x))-array_x-6.733896863396771))), axis=1)+10*(np.sin(2*np.pi*np.mean(10*(np.square(abs(8.880147119907782))-np.cos(2*np.pi*abs(np.square(np.square(8.98497073343589)+5.947192431694069*np.square(array_x))-array_x-4.781216047473251))), axis=1)))",0.9335484,0.0,0.6628259,0.4945609,0.5537836,0.03391372,0.19392325,0.7047169
"np.mean(2.3532689938261435-array_x*array_x+5.253397704963928, axis=1)+np.sin(2*np.pi*np.mean(2.1991918405977344-array_x*array_x+9.478497172039964, axis=1))",0.23643674,0.09971314,5.235321e-06,1.0,0.54456556,0.004454254,0.08429887,0.85216504
"np.mean(3.130900230570087+array_x, axis=1)+10*(np.sin(2*np.pi*np.mean(9.540588839953614+array_x, axis=1)))",1.0,0.0,0.002014308,0.33398977,0.63985705,0.10044759,0.3186974,0.42385438
"np.mean(3.2438779486348084*np.sqrt(abs(array_x))*np.log(abs(array_x-5.968148071958888)), axis=1)+10*(np.sin(2*np.pi*np.mean(2.410738567683798*np.sqrt(abs(array_x))*np.log(abs(array_x-4.468531557193156)), axis=1)))",0.7119035,0.0,0.7556876,1.0,0.6286487,0.06703201,0.26066896,0.45074114
"np.mean(3.584910197322767-np.cos(2*np.pi*array_x)-3.9249133458360914, axis=1)",0.32032874,0.0,0.19509254,1.0,0.64496005,0.035650015,0.29910156,0.80648524
"np.mean(3.812850220957967*array_x-1.454137963227332, axis=1)+10*(np.sin(2*np.pi*np.mean(4.94984390471401*array_x-7.6892367373641335, axis=1)))",1.0,0.0,0.25172368,0.6545598,0.6445697,0.04241506,0.2286244,0.6838639
"np.mean(3.8210478091400635*np.square(np.square(1.3432296267522237)+array_x), axis=1)+10*(np.sin(2*np.pi*np.mean(8.772524352570581*np.square(np.square(5.608724233110039)+array_x), axis=1)))",0.05386558,0.0,0.7611395,1.0,0.5295556,0.011081506,0.39304808,0.8415785
"np.mean(4.058360599799553/array_x, axis=1)+np.sin(2*np.pi*np.mean(7.050436820533443/array_x, axis=1))",0.9543711,0.0,1.0,0.90661865,0.7979629,0.016380914,0.7962428,0.9247848
"np.mean(4.2524340260529385+np.log(abs(array_x*5.335363623502307)), axis=1)+np.sin(2*np.pi*np.mean(5.15605085359575+np.log(abs(array_x*1.8799946547103157)), axis=1))",0.7083105,0.0,1.0,0.92410785,0.7030792,0.07170468,0.37000892,0.6427673
"np.mean(4.307460094317435-array_x, axis=1)+10*(np.sin(2*np.pi*np.mean(7.139432270852424-array_x, axis=1)))",1.0,0.0,0.006330344,0.57795954,0.631048,0.15107165,0.34961402,0.4554446
"np.mean(4.506674084586853/np.square(array_x)-np.sqrt(abs(6.786180906401217)), axis=1)+np.sin(2*np.pi*np.mean(7.32225596005809/np.square(array_x)-np.sqrt(abs(1.5028260392049937)), axis=1))",0.94217724,0.0,0.030895919,0.076576374,0.5340281,0.08564749,0.27254567,0.66099066
"np.mean(4.8613340352304935/array_x+4.346351588502078+np.cos(2*np.pi*5.970997427696607), axis=1)+np.sin(2*np.pi*np.mean(5.22352713013623/array_x+7.695652842595824+np.cos(2*np.pi*2.3869333343911157), axis=1))",0.78486145,0.21981408,1.0,0.47213098,0.7980867,0.015927693,0.79277766,0.92696613
"np.mean(6.346501659774641*np.cos(2*np.pi*np.square((np.array(range(1, array_x.shape[1]+1)))*array_x)), axis=1)",1.0,0.0,0.16141759,0.9195803,0.62711596,0.024439162,0.42935783,0.86258
"np.mean(6.820693335877778*abs(np.cos(2*np.pi*np.square((np.array(range(1, array_x.shape[1]+1)))))+7.9120696925980445)-np.round((np.array(range(1, array_x.shape[1]+1)))-8.390405075276156+array_x)-array_x, axis=1)",0.0,0.0016960076,0.0074464837,1.0,0.46598893,0.009344026,0.203197,0.87581027
"np.mean(7.092433717463443*array_x, axis=1)+np.sin(2*np.pi*np.mean(1.261884085370104*array_x, axis=1))",0.596796,0.0,0.012045033,0.8464028,0.5160913,0.011584819,0.13097864,0.8265067
"np.mean(7.199132813859494/(np.array(range(1, array_x.shape[1]+1)))*array_x+(np.array(range(1, array_x.shape[1]+1)))-1.1199877931087538*7.045064517398647+np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x+1.34230512677612), axis=1)",1.0,0.0,0.15142459,0.8630186,0.5439119,0.0242166,0.2410704,0.77757484
"np.mean(8.251777786806343/6.644617065184267-6.212551765690688/array_x, axis=1)+np.sin(2*np.pi*np.mean(8.038879155574335/3.3592118814878966-5.551372321868609/array_x, axis=1))",0.6291144,0.0,1.0,0.9267414,0.7437557,0.00752289,0.73551434,0.9543785
"np.mean(9.073614487605127*np.cumsum(7.761496529893088+abs((np.array(range(1, array_x.shape[1]+1)))*array_x), axis=1), axis=1)",0.038417634,0.0,0.5471798,1.0,0.4037851,0.005025585,0.7379847,0.90781564
"np.mean(9.159865011488039+array_x+np.log(abs(array_x)), axis=1)",0.8014645,0.0,0.47481406,1.0,0.49015903,0.009322229,0.16978961,0.809132
"np.mean(9.553685502904086+array_x, axis=1)+10*(np.sin(2*np.pi*np.mean(6.087117142276322+array_x, axis=1)))",1.0,0.0,0.00017253388,0.32536185,0.6562994,0.045980267,0.2180691,0.4999002
"np.mean(abs(-(np.square(9.700774514470371+array_x+7.931649057131966*9.57018755806534+array_x))), axis=1)",0.0,0.0054638716,0.039441306,1.0,0.48117706,0.008749113,0.12068528,0.84304583
"np.mean(abs(8.21372182936123)-np.square(array_x), axis=1)+np.sin(2*np.pi*np.mean(abs(1.580202071211695)-np.square(array_x), axis=1))",0.17182796,1.1564099e-06,6.8706714e-07,1.0,0.55982774,0.0050205546,0.09103561,0.8501347
"np.mean(abs(8.724447793657859*array_x+7.255585581852825)/array_x, axis=1)",0.9406628,0.0,1.0,0.97999007,0.7930414,0.01388459,0.78041023,0.9333368
"np.mean(abs(array_x*10*(7.719139413944114)), axis=1)+np.sin(2*np.pi*np.mean(abs(array_x*10*(5.238001132136999)), axis=1))",0.11013269,0.0,0.65630925,1.0,0.29023373,0.0036557333,0.67542154,0.90625703
"np.mean(abs(array_x+np.round(2.0813473384129)-1.5584315512567715+array_x), axis=1)",0.14982338,0.0,0.57676095,1.0,0.27799517,0.003928404,0.645074,0.89946795
"np.mean(abs(np.cumsum(array_x, axis=1)+7.197402755836434)+2.461100673653881, axis=1)",0.0,0.35786876,1.0,0.26482025,0.57264024,0.04604982,0.34787807,0.6177819
"np.mean(abs(np.log(abs(4.229080167355195+8.475871933252922/array_x))-np.square(10*(2.6764409646114764))-2.3217135988544633+array_x+array_x), axis=1)",0.0,0.0051179347,0.036472876,1.0,0.47264275,0.009129104,0.22737446,0.8726161
"np.mean(abs(np.square(3.0006649803230934+array_x)), axis=1)",0.0037713272,0.0,0.39707115,1.0,0.50518525,0.007752044,0.26870757,0.8474771
"np.mean(array_x*1.476249186604063-8.150818916506458*np.round(8.814372512898332)-np.exp(2.175251090279728)*abs(array_x), axis=1)",1.0,0.0,0.009288142,0.6095282,0.52815163,0.0050998614,0.08562913,0.84736985
"np.mean(array_x+3.4864762232257283+5.388202639502227-10*(5.922886673921693)+np.cos(2*np.pi*np.cumsum(np.square(np.log(abs(7.3375040309290664+array_x/8.41274740405032))), axis=1))-7.666470239670055, axis=1)",0.00039252063,0.0027680283,0.015411818,1.0,0.4931033,0.009495629,0.120607965,0.83192736
"np.mean(array_x+5.17208720668999-np.sin(2*np.pi*5.177374412395184)+6.900689168549936+array_x-array_x/1.9374492267071965, axis=1)+np.sin(2*np.pi*np.mean(array_x+2.8553855236596752-np.sin(2*np.pi*4.79832413420802)+5.085850025325675+array_x-array_x/9.195322281384378, axis=1))",1.0,0.0,2.9810082e-07,0.25051534,0.50749683,0.009725384,0.118765034,0.8221156
"np.mean(array_x+6.892328013792476+array_x/1.8634817920070121, axis=1)-6.12746355925933+np.sin(2*np.pi*np.mean(array_x+8.94476916661945+array_x/8.19285962519691, axis=1)-2.716565783603185)",1.0,0.0,1.1329704e-06,0.16268982,0.5592869,0.021157922,0.17031868,0.80064255
"np.mean(array_x+array_x-5.328641824191851-8.992850538658782+np.log(abs(np.sin(2*np.pi*8.209371617667243+(np.array(range(1, array_x.shape[1]+1))))))*9.716586854471515/10*(array_x), axis=1)",0.0,0.05017169,0.035175003,1.0,0.56788355,0.011919789,0.31985316,0.87622255
"np.mean(array_x-3.272455328266376/array_x/1.059648339453153*np.exp(np.sqrt(abs(np.sin(2*np.pi*array_x*8.536709125945169)))), axis=1)",0.98428243,0.0,1.0,0.88622403,0.73952836,0.007803644,0.72093403,0.95246315
"np.mean(array_x-7.333236039033779/9.96163459343902+array_x*(np.array(range(1, array_x.shape[1]+1))), axis=1)",0.0,0.0044359732,0.028513337,1.0,0.48182285,0.010252873,0.12145864,0.8578977
"np.mean(array_x/2.1564509763149102-np.sin(2*np.pi*np.cos(2*np.pi*array_x))/np.log(abs(4.806588081618915)), axis=1)",1.0,0.0,0.31632614,0.5827945,0.507093,0.012990326,0.15866858,0.8495395
"np.mean(np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*(np.array(range(1, array_x.shape[1]+1)))+4.678133804262711/np.cos(2*np.pi*array_x)+np.exp(np.round(np.exp(1.2457166611422759)))), axis=1)",0.8254415,0.0,0.22815077,1.0,0.7514502,0.025959251,0.6386789,0.8889271
"np.mean(np.cos(2*np.pi*-(np.square(array_x)+9.973437613282426)), axis=1)",0.80598897,0.0,0.2765698,1.0,0.7427854,0.030396264,0.6797882,0.8701536
"np.mean(np.cos(2*np.pi*10*(1/(np.log(abs(5.762983938068679))+array_x*np.cos(2*np.pi*np.log(abs(array_x))))))*4.335650410094587, axis=1)",1.0,0.0,0.28665343,0.9381962,0.60450417,0.01974776,0.24837169,0.8681041
"np.mean(np.cos(2*np.pi*2.2575011422670235*array_x-1/(5.1771118757181815)), axis=1)",0.9434675,0.0,0.3252106,0.9691406,0.6206044,0.02399383,0.36908188,0.8558638
"np.mean(np.cos(2*np.pi*2.518004404043235/array_x+array_x+8.327567489934633), axis=1)",1.0,0.0,0.42884907,0.8299087,0.66496277,0.019748775,0.5435704,0.89349395
"np.mean(np.cos(2*np.pi*6.740025520213638)*np.sqrt(abs(array_x))+9.04788081622919-np.square(array_x-5.3037144050323235)+array_x*7.044430784176691+array_x, axis=1)",0.0,0.008353278,0.024329433,1.0,0.50649863,0.008189691,0.1098391,0.8300065
"np.mean(np.cos(2*np.pi*array_x+abs(6.89945794472998))/9.449208361716142, axis=1)",0.5575363,0.0,0.3384783,1.0,0.638751,0.019574733,0.49581215,0.8702391
"np.mean(np.cos(2*np.pi*np.cos(2*np.pi*1.2496322637570585-array_x)/np.sqrt(abs(1/(abs(5.461254256029131))))), axis=1)",0.83052576,0.0,0.48577368,1.0,0.5907252,0.02079035,0.291235,0.84152204
"np.mean(np.cos(2*np.pi*np.cumsum(np.square(np.sin(2*np.pi*4.053392665145404)-np.cos(2*np.pi*abs(8.32212049830462)*np.cumsum(array_x, axis=1)*array_x)), axis=1)), axis=1)+np.sin(2*np.pi*np.mean(np.cos(2*np.pi*np.cumsum(np.square(np.sin(2*np.pi*5.408233692649955)-np.cos(2*np.pi*abs(8.22682830171808)*np.cumsum(array_x, axis=1)*array_x)), axis=1)), axis=1))",1.0,0.23077625,0.13856813,0.39823416,0.58537966,0.02107393,0.15791854,0.686589
"np.mean(np.cos(2*np.pi*np.log(abs(array_x*5.926545327682939+3.8500300671698438))), axis=1)",0.34273732,0.0,0.12666415,1.0,0.56771564,0.01915165,0.32590926,0.8637214
"np.mean(np.cos(2*np.pi*np.sin(2*np.pi*9.00138628392881))-array_x/2.2659969176648564-3.4363324549892678/array_x, axis=1)",0.9574846,0.0,1.0,0.89624363,0.7432147,0.007783798,0.7341351,0.95344216
"np.mean(np.cos(2*np.pi*np.sin(2*np.pi*9.096861630573233+(np.array(range(1, array_x.shape[1]+1)))))+9.637050604989772-array_x-abs(4.843702685709482), axis=1)+np.sin(2*np.pi*np.mean(np.cos(2*np.pi*np.sin(2*np.pi*9.890571088953411+(np.array(range(1, array_x.shape[1]+1)))))+2.1785790938598413-array_x-abs(6.955095027510183), axis=1))",1.0,0.0,4.9786977e-06,0.14524238,0.49949744,0.015048438,0.22611447,0.8500483
"np.mean(np.exp(-(3.2267300314007783)*array_x), axis=1)",0.0,0.04823573,0.039705604,1.0,0.4808946,0.050646916,0.36917052,0.7033509
"np.mean(np.exp(10*(np.sin(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x+7.27508095829215+(np.array(range(1, array_x.shape[1]+1)))*array_x-np.sin(2*np.pi*6.855698304486578)))), axis=1)",1.0,0.00066116214,0.00087532564,0.5969106,0.54121226,0.03743847,0.3995823,0.68797565
"np.mean(np.exp(2.8919179649201894)+np.sin(2*np.pi*array_x+1.4449080751841334-8.783696756121426), axis=1)",0.6565186,0.0,0.23309445,1.0,0.62616825,0.028571734,0.27661645,0.83519465
"np.mean(np.exp(3.0943551531932605*10*(9.58769648987407+array_x)), axis=1)",1.0,0.0,5.4676267e-08,1.9535696e-08,0.49863866,0.06668549,0.25384757,0.66533345
"np.mean(np.exp(8.898523313204127/array_x/4.228369239779245), axis=1)",1.0,0.0,0.2769773,0.4459867,0.49760368,0.075889744,0.2568573,0.67783666
"np.mean(np.exp(array_x*10*(array_x))+abs((np.array(range(1, array_x.shape[1]+1))))+6.559254936930782+6.540477328778678, axis=1)",0.0,0.03334916,1.0,0.14341252,0.5202947,0.079144925,0.257005,0.6583637
"np.mean(np.exp(np.log(abs(array_x))+1.4172051250704305/9.28892517347831)/array_x*5.957058242076693, axis=1)+np.sin(2*np.pi*np.mean(np.exp(np.log(abs(array_x))+6.08944853645245/9.393714244470207)/array_x*6.528071983984247, axis=1))",1.0,0.0,0.8125,0.25,0.5003201,0.013529278,0.151751,0.78888595
"np.mean(np.exp(np.sqrt(abs(np.exp(array_x)-abs(9.129117103010593)/array_x+3.659223672971103))), axis=1)",0.56858134,0.0,0.6391153,1.0,0.5310858,0.0869289,0.26202476,0.65854406
"np.mean(np.exp(np.square(array_x)), axis=1)",0.0,0.08458177,0.5029497,1.0,0.4981373,0.060339972,0.31102946,0.6625611
"np.mean(np.log(abs(1.0989112447767182-10*(np.sqrt(abs(array_x))))), axis=1)",0.8331429,0.0,0.90066063,1.0,0.65682894,0.026633725,0.815144,0.8002671
"np.mean(np.log(abs(2.714242776648093))+array_x, axis=1)+np.sin(2*np.pi*np.mean(np.log(abs(8.633730634089122))+array_x, axis=1))",1.0,0.0,1.5376587e-06,0.3333333,0.56071216,0.019472746,0.170014,0.8218556
"np.mean(np.log(abs(4.599696632565759-np.sqrt(abs(array_x-3.3448346209174495))))+np.square(np.sin(2*np.pi*2.5021223164191753))+6.1674460511872065*np.cos(2*np.pi*np.exp(10*(1.4537501027002133-array_x))), axis=1)",1.0,0.0,0.073043615,0.7380789,0.7449955,0.032016072,0.54158825,0.8442972
"np.mean(np.log(abs(abs(array_x/array_x*array_x)/4.221927997836458/np.sqrt(abs(2.5233156908827845+array_x*9.057743223366696)))), axis=1)",0.8377805,0.0,0.8429099,1.0,0.64859444,0.031565156,0.8013707,0.7827236
"np.mean(np.log(abs(np.cos(2*np.pi*10*(1.8321143574335756)-array_x)/1.0927920769044628)), axis=1)+np.sin(2*np.pi*np.mean(np.log(abs(np.cos(2*np.pi*10*(1.2250290994245592)-array_x)/6.056897581713725)), axis=1))",0.8262409,0.0,0.9343221,1.0,0.57707644,0.020397527,0.28889054,0.84332556
"np.mean(np.log(abs(np.exp(array_x)*array_x/10*(-(3.7565864332605865))/3.161190134626997-array_x)), axis=1)",0.8234957,0.0,0.84192556,1.0,0.49586993,0.006092738,0.7350846,0.91198117
"np.mean(np.log(abs(np.log(abs(10*(array_x)-4.0501786961337665))))-1.346832721506515*np.sqrt(abs(array_x)), axis=1)",0.95750636,0.0,0.9245005,1.0,0.6011693,0.010099054,0.1474803,0.8503672
"np.mean(np.log(abs(np.log(abs(np.cos(2*np.pi*abs(array_x-array_x/1.2396356879656647)+5.775840921920739)))))/np.sin(2*np.pi*2.339690954498682-array_x+9.25355752075803), axis=1)+np.sin(2*np.pi*np.mean(np.log(abs(np.log(abs(np.cos(2*np.pi*abs(array_x-array_x/4.992769074974218)+8.220742144325614)))))/np.sin(2*np.pi*1.5537800899716538-array_x+5.565621415040702), axis=1))",0.8634878,0.0,1.0,0.7682892,0.72495073,0.0068006357,0.6531084,0.95389587
"np.mean(np.log(abs(np.round(array_x)+9.891588060626464*(np.array(range(1, array_x.shape[1]+1)))-3.183528965336953/np.log(abs(7.940482838259227)))), axis=1)",1.0,0.0,0.0,0.326611,0.64062005,0.04917266,0.2801477,0.7317901
"np.mean(np.log(abs(np.sin(2*np.pi*np.log(abs(1.330126691043041))/np.log(abs(array_x*2.6138149783882025))/np.sqrt(abs(array_x))-9.987477073761303))), axis=1)",0.8730586,0.0,0.87371176,1.0,0.6694441,0.037126996,0.36067984,0.8306134
"np.mean(np.round(np.cos(2*np.pi*10*(-(array_x))+8.612678065327856)+3.332062725193543), axis=1)+np.sin(2*np.pi*np.mean(np.round(np.cos(2*np.pi*10*(-(array_x))+9.703071454329748)+9.405797155669154), axis=1))",1.0,0.0,0.33333334,0.7083333,0.59850264,0.05556502,0.23804973,0.64318943
"np.mean(np.round(np.sqrt(abs(np.sin(2*np.pi*5.689273484299903)-(np.array(range(1, array_x.shape[1]+1))))))*4.428667921189442*np.log(abs(np.log(abs(array_x)))), axis=1)",0.7930767,0.0,0.91333413,1.0,0.75126517,0.043335818,0.8074909,0.79532117
"np.mean(np.round(np.sqrt(abs(np.sin(2*np.pi*8.55742877773844)-np.sqrt(abs(array_x))))*2.691596829180105)/array_x-array_x*array_x-4.545324865097938, axis=1)",0.9703736,0.0,1.0,0.96583474,0.72025436,0.008967239,0.5495535,0.9438734
"np.mean(np.round(np.square(array_x))/1.336363033658268*np.cos(2*np.pi*9.6300650686359)/2.746364527829577, axis=1)",0.0,0.0,0.0,1.0,0.52404505,0.0028729623,0.06747658,0.85066384
"np.mean(np.round(np.square(np.cumsum(np.square(array_x+8.76077482865153), axis=1))), axis=1)",0.0,0.008634016,0.027933633,1.0,0.5476154,0.014676606,0.32059127,0.7612734
"np.mean(np.sin(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x*8.891069490852667)+8.142613005908501, axis=1)",1.0,0.0,0.0871147,0.94591117,0.63941807,0.01724651,0.37863743,0.88012975
"np.mean(np.sin(2*np.pi*1.7074560663413716)+array_x+array_x, axis=1)+np.sin(2*np.pi*np.mean(np.sin(2*np.pi*8.378351322665816)+array_x+array_x, axis=1))",1.0,0.0,1.3219013e-06,0.1988721,0.5524516,0.01915526,0.17691672,0.82856375
"np.mean(np.sin(2*np.pi*1/(array_x)-6.615747778680765/array_x), axis=1)",0.6509486,0.0,0.6530884,1.0,0.7166459,0.016914088,0.6064653,0.9205678
"np.mean(np.sin(2*np.pi*2.8242805989148114)-array_x+array_x/array_x-3.694230384287094+6.072607486585562*np.square(1.236958003935502)-array_x, axis=1)+np.sin(2*np.pi*np.mean(np.sin(2*np.pi*7.213936161886555)-array_x+array_x/array_x-2.9043741665358853+2.0938934907171642*np.square(4.314141006631515)-array_x, axis=1))",1.0,0.0,2.4737168e-05,0.49999788,0.5064104,0.010754559,0.25404662,0.8895544
"np.mean(np.sin(2*np.pi*5.377012541905568-array_x/8.079241586340238+abs(np.square(array_x-6.413064342526518))), axis=1)",0.81269395,0.0,0.25294855,1.0,0.6249388,0.014937343,0.37152702,0.8928752
"np.mean(np.sin(2*np.pi*7.337745920924406*array_x*np.sin(2*np.pi*9.085862837568644)-1.2267004706650113*array_x-(np.array(range(1, array_x.shape[1]+1)))/(np.array(range(1, array_x.shape[1]+1)))/array_x), axis=1)",0.85105056,0.0,0.25564188,1.0,0.67288476,0.029100416,0.45414385,0.85448635
"np.mean(np.sin(2*np.pi*9.662743860964811)/10*(array_x)+np.square(array_x), axis=1)",0.057479262,0.0,0.63642853,1.0,0.2327751,0.0036158997,0.5758329,0.89923257
"np.mean(np.sin(2*np.pi*abs(-(np.exp(2.8089333528650196-array_x)))), axis=1)",0.7752773,0.0,0.3423536,1.0,0.7199863,0.029721387,0.59466267,0.8725416
"np.mean(np.sin(2*np.pi*array_x+array_x+4.637125898759543/6.591709117584165), axis=1)",0.6505946,0.0,0.29168326,1.0,0.60770243,0.016557207,0.2691996,0.86887646
"np.mean(np.sin(2*np.pi*np.cos(2*np.pi*9.20107495838169*array_x+9.836836709783768-array_x-np.sqrt(abs(2.8463939209524467))-7.589633202705182+np.square(7.542934569308091-array_x))), axis=1)",0.93324345,0.0,0.28375766,1.0,0.60791796,0.024712455,0.25724155,0.84470785
"np.mean(np.sin(2*np.pi*np.cumsum(array_x*-(array_x), axis=1))+1.9897522848269489+abs(4.8992678479964535), axis=1)",1.0,0.0,0.6875585,0.72365314,0.53650206,0.009395976,0.7350478,0.9011112
"np.mean(np.sin(2*np.pi*np.exp((np.array(range(1, array_x.shape[1]+1)))+array_x)), axis=1)",0.7068081,0.0,0.27414045,1.0,0.737286,0.029838318,0.7062734,0.8873727
"np.mean(np.sin(2*np.pi*np.sin(2*np.pi*np.sin(2*np.pi*-(6.5915765504054855))+np.square(array_x-7.30546240818415+array_x-array_x))), axis=1)",0.9706101,0.0,0.31770813,1.0,0.68506426,0.032053377,0.4969849,0.8555501
"np.mean(np.sin(2*np.pi*np.square(array_x/9.625577373065198)/8.47496070913439)*1.8518961498226345, axis=1)+np.sin(2*np.pi*np.mean(np.sin(2*np.pi*np.square(array_x/7.6661115721792825)/2.9631857834789184)*5.5712873612083555, axis=1))",0.11378924,0.0,0.644674,0.46658722,0.6746591,0.077477366,0.26963702,0.38404432
"np.mean(np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))+1.4322586196250557-2.9113998731310358))*np.cos(2*np.pi*array_x), axis=1)",0.49243033,0.0,0.3088596,1.0,0.64241505,0.021296514,0.56991297,0.8703936
"np.mean(np.sqrt(abs(-(3.3773631215447586)))-array_x-8.562199575330512/array_x, axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(-(9.6691063437893)))-array_x-9.211666183081197/array_x, axis=1)))",0.94212645,0.0,1.0,0.99027306,0.7475029,0.008042182,0.73421705,0.9533554
"np.mean(np.sqrt(abs(2.293256778520464))*np.log(abs(7.050273910879-array_x/8.823121439477866)), axis=1)+np.sin(2*np.pi*np.mean(np.sqrt(abs(1.6960197800508716))*np.log(abs(4.908288878997734-array_x/2.3739787581813907)), axis=1))",0.0,0.08823895,1.0,0.42454752,0.4797865,0.016308658,0.15249383,0.71867883
"np.mean(np.sqrt(abs(3.9023518983597656))*np.cos(2*np.pi*array_x+5.05601437598499), axis=1)+np.sin(2*np.pi*np.mean(np.sqrt(abs(9.867360008506482))*np.cos(2*np.pi*array_x+8.805058617698553), axis=1))",0.7676719,0.0,0.9588127,0.82418436,0.5804996,0.0287882,0.23036401,0.8094146
"np.mean(np.sqrt(abs(4.211356042800838-6.716347678816269*np.square(array_x))), axis=1)",0.4914887,0.0,0.8554116,1.0,0.28315926,0.0035577165,0.6691431,0.90647894
"np.mean(np.sqrt(abs(9.147619413663618-array_x)), axis=1)+np.sin(2*np.pi*np.mean(np.sqrt(abs(7.78590508085282-array_x)), axis=1))",0.0,0.3482315,1.0,0.65981865,0.48996532,0.072217174,0.34978104,0.64698976
"np.mean(np.sqrt(abs(9.804206813181557-3.345394184328558/array_x)), axis=1)",0.7500063,0.0,0.8324055,1.0,0.594876,0.00172501,0.52570707,0.961461
"np.mean(np.sqrt(abs(array_x*np.exp(7.949024803223931))), axis=1)",0.38541132,0.0,0.7361352,1.0,0.35904136,0.0046724994,0.7245378,0.90192693
"np.mean(np.sqrt(abs(array_x+1.663114376877654))-np.round(7.723633187914203), axis=1)",0.4544559,0.0,0.66018367,1.0,0.6123686,0.0158496,0.7075815,0.8868938
"np.mean(np.sqrt(abs(array_x+np.sqrt(abs(array_x/5.65868906614908))))*1.1806408638888668, axis=1)",0.27140528,0.0,0.65940535,1.0,0.40209442,0.0055502146,0.7034324,0.9000473
"np.mean(np.sqrt(abs(np.cos(2*np.pi*1.2052674376789594-array_x/4.385023039996042)+np.cos(2*np.pi*10*(np.cos(2*np.pi*np.square(np.log(abs(array_x))))-np.log(abs(9.18316839834722)))))), axis=1)",1.0,0.0,0.41842636,0.91266537,0.729843,0.03527375,0.47129765,0.84612024
"np.mean(np.sqrt(abs(np.round(2.1220796873032852)*np.log(abs(array_x)))), axis=1)",0.25903085,0.0,0.69322157,1.0,0.58523417,0.011658499,0.76626575,0.89014554
"np.mean(np.sqrt(abs(np.round(np.exp(6.358434506725886)/10*(np.sqrt(abs(array_x*6.48104302645139)))-array_x-array_x*np.sqrt(abs(8.954467456122334))))), axis=1)",0.4839708,0.0,0.7391313,1.0,0.40406346,0.00594762,0.7340499,0.8966422
"np.mean(np.square(-(np.sin(2*np.pi*np.sqrt(abs(array_x+5.456237313486929+np.sqrt(abs(np.sin(2*np.pi*array_x)))))))*array_x+np.square(9.965539313559063)), axis=1)",1.0,0.0,0.07632528,0.504488,0.58065474,0.013979136,0.30357194,0.8957059
"np.mean(np.square(7.5865538803547965-array_x/np.sqrt(abs(10*(8.321491763492258)))-1.1731946997889315*4.5939821591232395/-(9.840776805585227*array_x)/array_x+8.491361447827947), axis=1)+10*(np.sin(2*np.pi*np.mean(np.square(7.627929926354847-array_x/np.sqrt(abs(10*(7.411867941998791)))-5.92477049828519*5.292012264198466/-(5.073680353887572*array_x)/array_x+1.659736590383908), axis=1)))",1.0,0.0,0.09371035,0.4398883,0.5330558,0.08744744,0.26227638,0.65722096
"np.mean(np.square(9.895096248575042-np.cumsum(array_x, axis=1)-3.3804782864001264-2.391110556062155), axis=1)",0.0,0.364718,1.0,0.34024906,0.47175935,0.04924238,0.36963978,0.69875824
"np.mean(np.square(np.exp(np.sqrt(abs(array_x)))*10*(3.5890588108482717)/np.sqrt(abs(1/(np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))+2.4520579917347005))-np.sqrt(abs(9.023405267813638))))), axis=1)",0.13331255,0.0,0.616946,1.0,0.23071066,0.003548622,0.5749459,0.8994116
"np.mean(np.square(np.sqrt(abs(4.446235657062962))-array_x), axis=1)",0.0,0.02582456,0.38039133,1.0,0.4509005,0.0071847006,0.4946792,0.8931211
"np.mean(np.square(np.sqrt(abs(np.round(np.sqrt(abs(4.844031364776528)))))-array_x)+9.536209669275065, axis=1)",0.0,0.017499207,0.54346156,1.0,0.38430563,0.0074088294,0.5362848,0.88728714
"np.round(10*(-(np.log(abs(np.sum(5.5772980254068205+array_x, axis=1)/3.945219379476412))))-np.sin(2*np.pi*np.sqrt(abs(np.log(abs(-(np.sqrt(abs(1.452974026742964)))))))))",1.0,0.0,0.0,0.25,0.5012578,0.012425622,0.27047727,0.81562877
"np.round(10*(4.2414757898257225))*np.mean(abs(np.cos(2*np.pi*array_x)-7.179307684956875-array_x+np.cos(2*np.pi*3.029253266998001)), axis=1)",0.78992856,0.0,0.0036249761,1.0,0.51138663,0.010633633,0.12570754,0.8207741
"np.round(np.mean(-(np.log(abs(3.335907267888045-array_x))+3.114427957849049), axis=1))",1.0,0.0,0.0,0.0,0.58395904,0.026282975,0.18593769,0.7800935
"np.round(np.mean(1/(array_x), axis=1))",0.9503573,0.0,1.0,0.9745396,0.79612064,0.015881704,0.7934515,0.9267409
"np.round(np.mean(2.9967187851320083+array_x+np.square(-(np.cos(2*np.pi*9.470938257005727))), axis=1))",1.0,0.0,0.0,0.5,0.5698273,0.01894668,0.16951178,0.80774844
"np.round(np.mean(abs(array_x-array_x/np.exp(np.cos(2*np.pi*array_x))-10*(7.365108002698093*array_x+6.124768652823702)), axis=1))",0.19090909,0.0,0.6227273,1.0,0.3970341,0.0048949104,0.69916147,0.90861696
"np.round(np.mean(abs(np.square(3.839164397891113)/array_x-6.554258693277293-7.292784090514513*array_x), axis=1))+np.sin(2*np.pi*np.round(np.mean(abs(np.square(9.49960870613905)/array_x-4.748056555757481-5.426502113198081*array_x), axis=1)))",0.33333334,0.0,0.6666667,1.0,0.55351514,0.07192969,0.3610996,0.6773496
"np.round(np.mean(array_x+np.log(abs(1.2199743904476406)), axis=1))",1.0,0.0,0.0,0.0,0.51659614,0.009795224,0.12488754,0.74596244
"np.round(np.mean(array_x+np.round(array_x*3.0387427712961905)-4.2684864322118*2.5570824546520465, axis=1))",1.0,0.0,0.0,1.0,0.47703558,0.008436611,0.12020656,0.84040934
"np.round(np.mean(np.log(abs(array_x)), axis=1))",0.75,0.0,1.0,1.0,0.69750947,0.12982705,0.38708296,0.33947623
"np.round(np.mean(np.log(abs(np.cos(2*np.pi*3.7340970226613943*array_x-3.401708063846573))), axis=1))",1.0,0.0,1.0,1.0,0.8273425,0.037328977,0.7607021,0.86417097
"np.round(np.mean(np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))*3.677185299221734))-array_x, axis=1))",1.0,0.0,0.0,0.0,0.4639721,0.011348005,0.19409661,0.856162
"np.round(np.mean(np.square(4.421130221854392+array_x-1.5149897137641184), axis=1))",1.0,0.0,0.0,0.0,0.5037611,0.008152712,0.2717164,0.83731663
"np.round(np.mean(np.square(8.143632939910237-np.exp(array_x/np.square(3.3033720880787367)))-8.752868793851663, axis=1))",1.0,0.0,0.0,0.0,0.44727364,0.013011594,0.14568771,0.83771354
"np.round(np.mean(np.square(np.sqrt(abs(np.square(np.sin(2*np.pi*(np.array(range(1, array_x.shape[1]+1))))-(np.array(range(1, array_x.shape[1]+1))))-np.sin(2*np.pi*array_x-array_x)))-array_x/8.973828794040116), axis=1))",1.0,0.0,0.16666667,0.41666666,0.5919218,0.012731486,0.44803768,0.894048
"np.round(np.mean(np.square(np.square(9.272970070285693)-8.878457584815742*(np.array(range(1, array_x.shape[1]+1)))/-(4.899760325457229)-array_x), axis=1))",0.0,0.0,0.026334027,1.0,0.4704703,0.01010367,0.21180128,0.8701275
"np.round(np.sqrt(abs(2.1328625389422102))*np.mean(array_x, axis=1)/10*(2.155986546735253))",1.0,0.0,0.0,0.0,0.68475384,0.02149967,0.4884732,0.8934815
"np.sin(2*np.pi*-(10*(abs(np.sin(2*np.pi*np.log(abs(2.828701422422858))/np.mean(array_x, axis=1))))))",1.0,0.01741994,0.09206468,0.0,0.69769895,0.10984142,0.32847965,0.3907123
"np.sin(2*np.pi*-(np.prod((np.array(range(1, array_x.shape[1]+1)))-3.4064059195790444-array_x, axis=1)/6.863302781147258))",1.0,0.0014140735,0.020308783,0.014192839,0.67303467,0.10690188,0.34806377,0.3886058
"np.sin(2*np.pi*np.cos(2*np.pi*np.sum(1.3850908536060036-(np.array(range(1, array_x.shape[1]+1)))-np.square(5.338218648627582)-(np.array(range(1, array_x.shape[1]+1)))*array_x*3.8221807539993455, axis=1)))",1.0,0.00028935674,0.017558275,0.0007241221,0.64893585,0.20424916,0.40016454,0.46174976
"np.sin(2*np.pi*np.exp(np.log(abs(2.542667742500399-np.sum(array_x, axis=1)))*np.round(np.sqrt(abs(np.exp(6.1717828181174825))))))",0.47330213,0.051769726,0.035286177,0.07466948,0.69598866,0.059683535,0.252774,0.3493958
"np.sin(2*np.pi*np.mean(np.square(-(np.exp(5.115459236428433)*array_x)), axis=1))",1.0,0.009960643,0.0014092142,0.002823161,0.6660556,0.055558357,0.2527771,0.35747468
"np.sin(2*np.pi*np.sin(2*np.pi*np.log(abs(5.728234405564471))-np.round(np.sum(array_x, axis=1))/6.210166809393764))+10*(np.sin(2*np.pi*np.sin(2*np.pi*np.sin(2*np.pi*np.log(abs(3.829055020517535))-np.round(np.sum(array_x, axis=1))/3.5824444322779403))))",1.0,0.0,0.6208806,0.0,0.6763429,0.016333431,0.15401049,0.49599272
"np.sin(2*np.pi*np.square(abs(np.cos(2*np.pi*1.237884278139852*np.sum(np.sin(2*np.pi*array_x), axis=1)/np.prod(array_x, axis=1))-1/(3.233077931191123))))+np.sin(2*np.pi*np.sin(2*np.pi*np.square(abs(np.cos(2*np.pi*5.155646769866728*np.sum(np.sin(2*np.pi*array_x), axis=1)/np.prod(array_x, axis=1))-1/(4.060229533618987)))))",1.0,0.25280544,0.33984214,0.13601792,0.6551171,0.0037380422,0.5459442,0.9577659
"np.sqrt(abs(2.1806331406599617-np.sum(1/(array_x)+4.414662867045681, axis=1)))",0.35699406,0.0,0.24856842,1.0,0.751009,0.005560235,0.793718,0.9564507
"np.sqrt(abs(6.195312072622471*array_x[:,0]))*4.143402680868504/np.mean(np.exp(array_x), axis=1)",0.22499043,0.34023708,0.9024234,0.2066166,0.4832418,0.058417194,0.31954622,0.71046835
"np.sqrt(abs(np.mean(np.log(abs(1.4407618250551029-array_x))-9.409022272232102, axis=1)))",1.0,0.0,0.010047542,0.25601372,0.48423153,0.008760473,0.11612387,0.8434275
"np.sqrt(abs(np.sin(2*np.pi*4.9977704601715285)))+1/(np.sum((np.array(range(1, array_x.shape[1]+1)))*array_x+6.391281442489543, axis=1))",1.0,0.78119004,0.9776921,0.0,0.56658584,0.00045850888,0.6392977,0.9792588
"np.sqrt(abs(np.sum(array_x, axis=1)*2.286939026576369))/np.sum(array_x-6.079796273486679+array_x, axis=1)+np.sin(2*np.pi*np.sqrt(abs(np.sum(array_x, axis=1)*6.374115720712091))/np.sum(array_x-8.091719997340327+array_x, axis=1))",1.0,0.0,0.81185687,0.44030172,0.6193519,0.01961966,0.19120511,0.7635209
"np.sqrt(abs(np.sum(np.cumsum(np.sqrt(abs(array_x)), axis=1), axis=1)))*np.square(3.491178579511149)",0.42938215,0.0,0.69865084,1.0,0.46288124,0.00856562,0.7672033,0.8680951
"np.sqrt(abs(np.sum(np.square(array_x)-np.sqrt(abs(1/(np.sqrt(abs(np.sqrt(abs(3.8263487325093544))))))), axis=1)))+np.sin(2*np.pi*np.sqrt(abs(np.sum(np.square(array_x)-np.sqrt(abs(1/(np.sqrt(abs(np.sqrt(abs(8.881551628971994))))))), axis=1))))",0.9668515,0.0,0.582896,0.09338593,0.4037643,0.004155342,0.80917877,0.9076466
"np.square(np.amax(np.exp(array_x+np.sin(2*np.pi*np.sqrt(abs(4.419680793947403)))+array_x+2.8866174995859297), axis=1))+10*(np.sin(2*np.pi*np.square(np.amax(np.exp(array_x+np.sin(2*np.pi*np.sqrt(abs(4.395549174482138)))+array_x+7.656310177615677), axis=1))))",1.0,0.0,0.059842903,0.013190056,0.55715084,0.058661543,0.31967235,0.5697889
"np.square(np.mean(np.square(7.80532352965047/np.sqrt(abs(array_x))*np.log(abs(4.967896075788213))), axis=1))",0.0,0.051132996,0.0327561,1.0,0.52273333,0.08093781,0.278415,0.6709952
"np.square(np.prod(10*(1/(4.280649715967229*(np.array(range(1, array_x.shape[1]+1)))*array_x-3.1965918681176273+(np.array(range(1, array_x.shape[1]+1)))*array_x)+9.837229261474997*np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))*array_x-2.8290547288878094))), axis=1))",0.00033258076,0.0,0.0018514016,1.0,0.4233927,0.037602525,0.24906309,0.6957417
"np.square(np.prod(9.37627112694711*(np.array(range(1, array_x.shape[1]+1)))*array_x-3.277754038262576+(np.array(range(1, array_x.shape[1]+1)))*array_x+2.3650309501274016/1.2813501798188294+np.square((np.array(range(1, array_x.shape[1]+1)))*array_x)+9.73076500058735-3.0067232000794615, axis=1))",3.2990158e-07,0.0,7.631388e-07,1.0,0.4545651,0.061719947,0.25316513,0.70303994
"np.square(np.sqrt(abs(np.sqrt(abs(np.mean(np.sin(2*np.pi*array_x+2.411239108104768), axis=1)))))+6.727166968548246)+np.sin(2*np.pi*np.square(np.sqrt(abs(np.sqrt(abs(np.mean(np.sin(2*np.pi*array_x+8.070789997316655), axis=1)))))+9.91431666162491))",1.0,0.5043278,0.37857607,0.34721792,0.6886338,0.03506212,0.35021368,0.8144253
"np.sum(10*(7.59091464597734/8.646797744387806-array_x-np.sin(2*np.pi*array_x+3.5828247116547294)), axis=1)",1.0,0.0,0.15705231,0.7929086,0.47335234,0.010033273,0.20653766,0.87562925
"np.sum(np.sin(2*np.pi*6.842743351789174)/np.log(abs(3.260289797712355))-array_x, axis=1)+np.sin(2*np.pi*np.sum(np.sin(2*np.pi*7.522869780496442)/np.log(abs(4.038479879663672))-array_x, axis=1))",3.8069152e-06,0.0,0.00025561312,1.0,0.45974034,0.010440608,0.19290787,0.86627674
"np.sum(np.sqrt(abs(5.5594277818079325/array_x-8.743906217709629)), axis=1)+np.sin(2*np.pi*np.sum(np.sqrt(abs(9.156629079749424/array_x-8.791738981072442)), axis=1))",0.7268773,0.0,0.91726226,1.0,0.55652183,0.015418592,0.44803765,0.80033904
"np.sum(np.sqrt(abs(9.015011009389356/array_x)), axis=1)+np.sin(2*np.pi*np.sum(np.sqrt(abs(4.084245791352087/array_x)), axis=1))",1.0,0.0,2.7692931e-06,7.1802795e-05,0.5603823,0.020771574,0.37356174,0.7531524
"np.sum(np.square(-((np.array(range(1, array_x.shape[1]+1)))*array_x/4.224606947080737*(np.array(range(1, array_x.shape[1]+1)))*array_x)), axis=1)",0.0,0.026006741,0.16139983,1.0,0.40793172,0.024915984,0.4555256,0.7534982
"np.sum(np.square(1.7196626938670199+(np.array(range(1, array_x.shape[1]+1)))/(np.array(range(1, array_x.shape[1]+1)))+2.8454104229119888/1.291052930704954)-np.square(np.round(array_x)/(np.array(range(1, array_x.shape[1]+1)))/np.cos(2*np.pi*1.8792533075850217)), axis=1)",0.0,0.0,0.0,1.0,0.63666904,0.012654179,0.13764898,0.69712794
