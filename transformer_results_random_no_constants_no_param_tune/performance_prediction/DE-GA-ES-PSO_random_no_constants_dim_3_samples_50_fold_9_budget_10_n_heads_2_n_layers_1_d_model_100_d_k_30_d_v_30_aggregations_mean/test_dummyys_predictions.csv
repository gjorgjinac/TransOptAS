,true_DE,true_ES,true_GA,true_PSO,pred_DE,pred_ES,pred_GA,pred_PSO
"1.708544654922471+np.sin(2*np.pi*4.228731612521147-np.amax(array_x, axis=1))",1.0,0.0015652049,3.9352657e-05,0.1464186,0.2829247,0.5590774,0.110538505,0.6710259
"10*(abs(1.1254065041979164-np.mean(array_x, axis=1)))+np.square(7.4564553234261535)",0.89884895,0.0,0.14201641,0.6370918,0.2829247,0.5590774,0.110538505,0.6710259
"2.7743765940776983+np.sum(np.log(abs(3.694072810211435))-array_x/9.772094238520749, axis=1)+10*(np.sin(2*np.pi*4.61634548461552+np.sum(np.log(abs(4.634808846621134))-array_x/9.443292723149128, axis=1)))",0.0,1.0,0.11233027,0.009420155,0.2829247,0.5590774,0.110538505,0.6710259
"2.908863512284211-1/(np.mean(10*(np.exp(array_x)/3.4562123217543226)-6.286134307682521+np.cos(2*np.pi*array_x), axis=1))",0.9687714,0.8501836,0.0,0.96143425,0.2829247,0.5590774,0.110538505,0.6710259
"4.694678852596098*np.sum(np.log(abs(np.square(3.2119405667436327+array_x))), axis=1)-np.mean(array_x-1.8944757225375224, axis=1)+np.sin(2*np.pi*1.4080300951945364*np.sum(np.log(abs(np.square(9.841952443963082+array_x))), axis=1)-np.mean(array_x-3.2724126375501563, axis=1))",0.6330526,0.79534703,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"4.947204662299681*np.sin(2*np.pi*np.mean(np.square(array_x), axis=1))",0.24288988,0.017867168,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"7.56751323157208+1/(np.sum(array_x+1.6136519513554735/array_x, axis=1))",0.9233848,0.98517823,0.0,0.96194625,0.2829247,0.5590774,0.110538505,0.6710259
"8.152754993252827-np.sum(array_x, axis=1)+np.sin(2*np.pi*6.767286450325646-np.sum(array_x, axis=1))",0.0,1.0,0.2262382,0.022511374,0.2829247,0.5590774,0.110538505,0.6710259
"8.94390320905877/np.mean(array_x-3.6562681381902693, axis=1)-np.exp(9.619072637926052+np.sin(2*np.pi*np.square(array_x[:,0])))",0.9526395,0.23721604,0.53159875,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"abs(np.sin(2*np.pi*np.square(np.exp(10*(np.cos(2*np.pi*2.9166039797096257))+np.amax(array_x, axis=1)))))+np.sin(2*np.pi*abs(np.sin(2*np.pi*np.square(np.exp(10*(np.cos(2*np.pi*7.628757708559249))+np.amax(array_x, axis=1))))))",0.49628353,0.0,0.4926266,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.amax(6.366978985993448-np.sqrt(abs(array_x)), axis=1)+np.sin(2*np.pi*np.amax(3.2188057510811907-np.sqrt(abs(array_x)), axis=1))",0.8009464,0.02021693,0.0,0.7596207,0.2829247,0.5590774,0.110538505,0.6710259
"np.amax(np.cumsum(array_x, axis=1), axis=1)",0.0,0.7214175,0.12329022,0.31901848,0.2829247,0.5590774,0.110538505,0.6710259
"np.amax(np.sqrt(abs(array_x+5.990532825200572)), axis=1)+10*(np.sin(2*np.pi*np.amax(np.sqrt(abs(array_x+5.43511401967175)), axis=1)))",0.00069372234,0.003422508,0.00091790565,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.cos(2*np.pi*10*(7.368572486695321)*np.amax(np.log(abs(1.4391091852989435))/array_x, axis=1))",0.1703007,0.0,0.020798845,0.79598176,0.2829247,0.5590774,0.110538505,0.6710259
"np.cos(2*np.pi*np.mean(np.log(abs(array_x-4.08863692081829)), axis=1))",0.0412726,0.15237296,0.0013538453,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.exp(np.sum(array_x, axis=1))+10*(np.sin(2*np.pi*np.exp(np.sum(array_x, axis=1))))",0.61753726,0.0,0.0036850222,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.exp(np.sum(np.sin(2*np.pi*array_x), axis=1))",0.0991341,0.40203488,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.log(abs(-(np.mean(np.sin(2*np.pi*np.square(-(np.sqrt(abs(np.sqrt(abs(4.97617384646562-np.square(array_x)))))))), axis=1))))",0.78995943,0.06182889,0.13733193,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.log(abs(np.square(np.mean(np.square(4.835800122294451)-array_x, axis=1))))",0.0,1.0,0.1638252,0.01446973,0.2829247,0.5590774,0.110538505,0.6710259
"np.log(abs(np.square(np.prod(8.680577249252327/array_x-3.8502308334898308*np.square(2.6922703838854436*np.square(np.cos(2*np.pi*array_x))), axis=1))))",0.5598071,0.68082273,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(-(np.exp(6.985440058479844)+np.cos(2*np.pi*np.sin(2*np.pi*-(7.710281365641825)*array_x))), axis=1)",0.0,0.017098142,0.029046252,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(-(np.log(abs(array_x+5.332647487111776))), axis=1)",0.0,1.0,0.14182276,0.012223172,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(-(np.round(1.8765864602862212-(np.array(range(1, array_x.shape[1]+1)))*array_x))/9.197347511096215, axis=1)",0.0,1.0,0.0,0.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(-(np.sin(2*np.pi*array_x))-np.square(9.671210799543177/(np.array(range(1, array_x.shape[1]+1)))), axis=1)+10*(np.sin(2*np.pi*np.mean(-(np.sin(2*np.pi*array_x))-np.square(2.395769284628793/(np.array(range(1, array_x.shape[1]+1)))), axis=1)))",0.02375124,0.004631865,0.006246731,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(1.2134559473380784*array_x*2.6183429621918575, axis=1)+10*(np.sin(2*np.pi*np.mean(6.02321244782257*array_x*7.888065254783519, axis=1)))",0.0,0.39883232,0.1834394,0.8989249,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(1.8913640814657076*-(array_x), axis=1)+np.sin(2*np.pi*np.mean(3.02619746700564*-(array_x), axis=1))",0.0007884667,0.9995817,0.009441658,0.9989605,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(1.9302920568181783/np.log(abs(10*(array_x)+9.908962272532355))+array_x, axis=1)",0.997042,0.47266328,0.5538966,0.99673283,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(1/(array_x+np.square(array_x)), axis=1)",0.99550456,0.48898765,0.0,0.9976954,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(1/(np.exp(1.1950652102796235*(np.array(range(1, array_x.shape[1]+1)))*array_x))/2.3682256845188854, axis=1)",0.0,1.0,0.11967255,0.045129403,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(1/(np.square(array_x)+array_x*7.472408180847677-np.exp(2.871892004718864-array_x)), axis=1)+np.sin(2*np.pi*np.mean(1/(np.square(array_x)+array_x*6.140745161654998-np.exp(1.6225978703775217-array_x)), axis=1))",1.0,0.0,0.83192784,0.93821347,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(10*(10*(10*(4.062421915372591)-array_x)), axis=1)+10*(np.sin(2*np.pi*np.mean(10*(10*(10*(2.272707404511909)-array_x)), axis=1)))",0.0,1.0,0.17813987,0.04081784,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(10*(2.1961929978967687/np.square(np.exp(array_x)+9.237670947695964)), axis=1)",0.0,1.0,0.22778697,0.019360311,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(10*(np.sin(2*np.pi*array_x-np.sqrt(abs(-(5.873551328746867+array_x))))+np.square(4.806327748306375)-array_x/2.4077456901697762), axis=1)+10*(np.sin(2*np.pi*np.mean(10*(np.sin(2*np.pi*array_x-np.sqrt(abs(-(4.081033174958305+array_x))))+np.square(2.1763122213672306)-array_x/7.036932029080473), axis=1)))",0.40112048,0.5740583,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(2.102339877871766+array_x/8.753498582033224, axis=1)+10*(np.sin(2*np.pi*np.mean(5.196545203868378+array_x/9.676753936044086, axis=1)))",0.39223453,0.0,0.037276838,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(3.076831949616091/array_x+9.991581124966466*np.sqrt(abs(1/(array_x)))-array_x+7.560078279436836/5.945166657731049, axis=1)",0.9717291,0.4740787,0.0,0.9971152,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(3.231527484384112-array_x/6.14609882974627, axis=1)+np.sin(2*np.pi*np.mean(8.040798573999497-array_x/4.236058356080937, axis=1))",0.7340191,0.0,0.0141555285,0.88635105,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(3.323289258921617*-(np.exp(-(8.40724151788662*array_x+np.log(abs(6.1994353604958405))))), axis=1)",0.0,0.84068364,0.018759686,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(3.5369207121200743+array_x*3.1477340191207226+array_x-3.3085963630883803, axis=1)+np.sin(2*np.pi*np.mean(3.6136896484851473+array_x*7.374680388276698+array_x-8.207666150398808, axis=1))",0.0,1.0,0.0063059023,0.00088313944,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(3.628921388314256-array_x+np.log(abs(8.96876614018105)), axis=1)+np.mean(array_x, axis=1)+6.868615103935828*np.mean(array_x/2.6350251545182104/array_x+7.953042393500721, axis=1)+10*(np.sin(2*np.pi*np.mean(4.416773713045298-array_x+np.log(abs(8.49449708746207)), axis=1)+np.mean(array_x, axis=1)+1.3742844122921425*np.mean(array_x/9.788491302467593/array_x+7.506885147197634, axis=1)))",0.050408423,0.0,0.029647544,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(3.9299554912390624/array_x-2.1808527298207396*4.874187068406497*array_x+array_x-np.square(5.852928942343234), axis=1)",0.98170406,0.09115549,0.6870385,0.8597008,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(4.050017347498764/np.square(2.702474818209166-7.874922488993859*array_x), axis=1)",0.0,0.27138144,0.031109424,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(4.166205620585038-np.log(abs(9.005051395240963+array_x)), axis=1)",0.0,1.0,0.13780858,0.008996804,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(4.168240599351451*np.sin(2*np.pi*1.025238409784772*array_x), axis=1)",0.10447033,0.31854713,0.0061763213,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(4.40358251898496/-((np.array(range(1, array_x.shape[1]+1)))*array_x), axis=1)",1.0,0.0,0.85316455,0.99774885,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(4.579860713473268-(np.array(range(1, array_x.shape[1]+1)))+1.0647976346345822/array_x, axis=1)+10*(np.sin(2*np.pi*np.mean(5.102298296811619-(np.array(range(1, array_x.shape[1]+1)))+3.0659142458829423/array_x, axis=1)))",0.9772892,0.30454206,0.20648201,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(4.89922672752647*array_x+1.796766064671393/np.exp(array_x)/abs(array_x), axis=1)",0.04015954,0.6468067,0.025644958,0.50355166,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(5.0622283148499285+9.185144631283645*array_x-np.square(2.601114918594458)+np.sqrt(abs(array_x))-np.sqrt(abs(np.exp((np.array(range(1, array_x.shape[1]+1)))))), axis=1)+np.sin(2*np.pi*np.mean(2.90262189289159+8.145267353612294*array_x-np.square(3.473842352740853)+np.sqrt(abs(array_x))-np.sqrt(abs(np.exp((np.array(range(1, array_x.shape[1]+1)))))), axis=1))",0.0,1.0,0.0019383518,1.0088147e-05,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(5.17802373694485*np.sin(2*np.pi*array_x)-2.499533761476405-7.91232099823858*array_x-8.952888121038653, axis=1)",0.015288694,1.0,0.16121727,0.18244563,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(6.044579353804668+8.109715365385792/array_x, axis=1)",1.0,0.48250464,0.0,0.97136617,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(8.22723152354119-array_x+abs(array_x)/4.242118280833408, axis=1)+10*(np.sin(2*np.pi*np.mean(6.43207632174068-array_x+abs(array_x)/4.457775434268083, axis=1)))",0.0,0.28552982,0.013500354,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(8.325469563693822-array_x+3.5863571583652636, axis=1)+10*(np.sin(2*np.pi*np.mean(4.706941689118278-array_x+5.716039789087321, axis=1)))",0.0,0.4486931,0.0003443409,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(8.426885391730691-np.sqrt(abs(5.457898818993669-1.4576554236915054*np.cos(2*np.pi*array_x))), axis=1)",0.0,0.22065932,0.05124972,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(8.470642964900996/np.cos(2*np.pi*4.910606385846588+array_x), axis=1)",0.93423516,0.0,0.3080746,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(8.767139612773015+3.870446062753661/(np.array(range(1, array_x.shape[1]+1)))-array_x, axis=1)+np.sin(2*np.pi*np.mean(7.025411220448771+9.273420526752084/(np.array(range(1, array_x.shape[1]+1)))-array_x, axis=1))",0.0,0.6629136,0.0012930849,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(8.848870881328171/np.sqrt(abs(array_x-1.736055131046001))-abs(1/(np.square(6.46409293616676))), axis=1)",0.0,1.0,0.14394686,0.017464649,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(8.860068636121074+array_x, axis=1)",0.0,1.0,0.082030706,0.0052671377,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(9.092323968924271-array_x, axis=1)+np.sin(2*np.pi*np.mean(1.1389599439896028-array_x, axis=1))",0.0002390122,0.00018934581,0.0015572753,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(9.805134452840935-1/(7.985991763402831+array_x*array_x-6.7294264641429), axis=1)",0.39793193,1.0,0.020597924,0.17874151,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(9.808769523140176-array_x*6.6574965484104+np.round(np.cos(2*np.pi*array_x)), axis=1)+np.sin(2*np.pi*np.mean(8.991961507726565-array_x*3.7123762791413593+np.round(np.cos(2*np.pi*array_x)), axis=1))",0.000122076,1.0,0.0,0.05048333,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(1/(np.square(6.138330524694365)+1/(array_x))), axis=1)+10*(np.sin(2*np.pi*np.mean(abs(1/(np.square(4.950388135813621)+1/(array_x))), axis=1)))",1.0,0.0,0.7578189,0.85851586,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(2.811307499660807+array_x)/np.sqrt(abs(4.263619609489986)), axis=1)",0.7838544,0.3749346,0.0,0.5345633,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(3.6835044628694362)-array_x*9.658674212086803, axis=1)+np.sin(2*np.pi*np.mean(abs(9.294977282124385)-array_x*7.424032353955207, axis=1))",0.0,1.0,0.00040365235,0.00290448,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(array_x)-2.954280893740347/1.5115833694833256, axis=1)+np.sin(2*np.pi*np.mean(abs(array_x)-2.0769121053803157/9.680953443458886, axis=1))",0.90462655,0.25961873,0.14004034,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(array_x/abs(1.0240631079685532))/np.sin(2*np.pi*array_x)+array_x, axis=1)",0.0,1.0,0.998983,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(np.cumsum(array_x, axis=1)*3.8780519134456877*np.square(9.94566259996995)*(np.array(range(1, array_x.shape[1]+1)))+2.3574892156060905+5.584550982529147), axis=1)",0.96163565,1.0,0.03706357,0.04409627,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(np.exp(3.7050357474985933))-1/(array_x)+4.512460239175992+np.square(array_x), axis=1)",0.99030167,0.7078204,0.36346713,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(abs(np.square(-(5.213400039803848)))-array_x+6.656746653577183/9.692811042550746+np.sin(2*np.pi*array_x-8.209936953334928), axis=1)+10*(np.sin(2*np.pi*np.mean(abs(np.square(-(7.031490511778372)))-array_x+7.5539998886905/1.5036741709448869+np.sin(2*np.pi*array_x-1.0665127323988743), axis=1)))",0.0,0.35119843,0.21588258,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(array_x*6.819939620550493-array_x-2.5288691008361455, axis=1)+np.sin(2*np.pi*np.mean(array_x*9.61894744800894-array_x-2.8803465577875382, axis=1))",3.999542e-05,1.0,0.0017344744,0.0005059642,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(array_x+1.1960755045946625, axis=1)+10*(np.sin(2*np.pi*np.mean(array_x+6.732652804905026, axis=1)))",6.777109e-05,0.029535506,0.00030442554,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(array_x+2.6792970976787727-array_x+array_x, axis=1)+10*(np.sin(2*np.pi*np.mean(array_x+3.770431171660232-array_x+array_x, axis=1)))",0.0004063884,0.005506931,7.530489e-05,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(array_x-2.004051713086123/array_x, axis=1)",0.9995158,0.23617576,0.17975315,0.9995134,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(array_x-2.0858325620374556+np.round(np.round(array_x)), axis=1)",0.0,1.0,0.17801258,0.005452399,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(array_x/8.24325189843831-2.4992120668651885/array_x-array_x-9.376642054839145, axis=1)",1.0,0.8947239,0.0,0.9913592,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x+5.597339934500646)+6.288141236315073-(np.array(range(1, array_x.shape[1]+1)))*array_x*1.9753676048817852, axis=1)",0.028428575,0.90282595,0.09255777,0.20669895,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*-(np.square(4.883660999042149*array_x/np.round((np.array(range(1, array_x.shape[1]+1)))))))/np.log(abs(np.square(np.square(8.382589137025931)+array_x))), axis=1)+np.sin(2*np.pi*np.mean(np.cos(2*np.pi*-(np.square(8.83393937216399*array_x/np.round((np.array(range(1, array_x.shape[1]+1)))))))/np.log(abs(np.square(np.square(5.206408001571976)+array_x))), axis=1))",0.0,0.36575988,0.2041232,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*3.9048885787922774/array_x), axis=1)",0.28876388,0.40490758,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*4.169795805174145-10*(np.sin(2*np.pi*np.sin(2*np.pi*10*(abs(array_x*6.5414977896515385-array_x)/4.422567585439078))))), axis=1)",0.07207756,0.38652253,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*abs(10*(np.square(2.1095382000816505*np.square(array_x-(np.array(range(1, array_x.shape[1]+1))))))*3.484272824864946)), axis=1)",0.18947986,0.21440007,0.024628583,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*abs(np.cos(2*np.pi*np.sin(2*np.pi*array_x)))), axis=1)",0.0,0.22966827,0.050231617,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*array_x)-9.847547330702739, axis=1)+10*(np.sin(2*np.pi*np.mean(np.cos(2*np.pi*array_x)-1.007572800383096, axis=1)))",0.00020758648,0.016856382,0.0048692236,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*np.cumsum(array_x*1.623620894359837+array_x+1.7940389124807044, axis=1))-1.7593605699216557+array_x+np.log(abs(np.sqrt(abs(3.911355421761148)))), axis=1)+np.sin(2*np.pi*np.mean(np.cos(2*np.pi*np.cumsum(array_x*7.969787111196251+array_x+7.654417883034391, axis=1))-3.3170899751635528+array_x+np.log(abs(np.sqrt(abs(6.207710577132839)))), axis=1))",0.028407825,0.6391863,0.044005837,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*np.cumsum(np.sqrt(abs(array_x-np.square(array_x)-np.round(2.1771537296513754))), axis=1))+np.exp(7.661242246111579)/8.965698565685614-array_x-3.2762851360051615, axis=1)",0.0,0.9936993,0.38712963,0.6750526,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*np.exp(array_x)+np.round(9.168315285983981)), axis=1)",0.15026669,0.05234748,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.cos(2*np.pi*np.sqrt(abs(np.cumsum(array_x, axis=1)))), axis=1)+np.sin(2*np.pi*np.mean(np.cos(2*np.pi*np.sqrt(abs(np.cumsum(array_x, axis=1)))), axis=1))",0.42304194,0.0,0.011657605,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp((np.array(range(1, array_x.shape[1]+1)))*array_x*5.8764877012105785/9.399066656168296), axis=1)",0.0,1.0,0.24732044,0.00981996,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(1.5867944559023073/array_x-2.212619263123349/array_x-array_x*np.square(np.cos(2*np.pi*array_x))+4.209142666996732), axis=1)",0.0,0.31155378,0.062443033,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(7.989964774102706)-np.exp(np.cumsum(-(6.4387109297098855)-array_x, axis=1)), axis=1)+10*(np.sin(2*np.pi*np.mean(np.exp(1.3339393938500361)-np.exp(np.cumsum(-(3.487885106999012)-array_x, axis=1)), axis=1)))",0.17645411,0.06269051,0.6401255,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(8.478652195999723*1.0064708185484394-array_x)*np.cos(2*np.pi*2.2423139022667518/array_x), axis=1)",0.0,1.0,0.032497022,0.033884127,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(np.exp(4.464212638128036)-np.cos(2*np.pi*array_x+6.1412446666979505/7.373747901714342)), axis=1)",0.0695688,0.25636885,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(np.log(abs(2.463664830009336))/np.round(8.407572326353048)+array_x/array_x+(np.array(range(1, array_x.shape[1]+1)))-2.237468634768137-array_x), axis=1)",0.0,1.0,0.15235016,0.009432516,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(np.log(abs(8.99156163123248*array_x))+array_x)/7.107117136146613, axis=1)",0.05815675,1.0,0.17946939,0.5419869,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(np.round(10*(np.sqrt(abs(array_x)))*6.68611545459653+9.401661427081544*np.sin(2*np.pi*array_x)+np.sin(2*np.pi*array_x))), axis=1)",1.0,0.021662649,0.0050131893,0.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(np.sin(2*np.pi*1.785781976963303))/np.sqrt(abs(5.279603801149064*(np.array(range(1, array_x.shape[1]+1)))*array_x))/7.222883156256758+(np.array(range(1, array_x.shape[1]+1)))+1/(8.841997045679378)-np.exp(8.97697723840615), axis=1)",0.0,1.0,0.1939181,0.007238888,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(np.sqrt(abs(-(np.log(abs(2.7865979449162444-array_x)))-3.616663717031026)))*4.2206961973084525, axis=1)+np.sin(2*np.pi*np.mean(np.exp(np.sqrt(abs(-(np.log(abs(8.755512540322801-array_x)))-9.431407721890036)))*2.4077080387907146, axis=1))",0.48462197,0.934322,0.0,0.9297086,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.exp(np.square(array_x/6.939671492217678)), axis=1)",0.9447745,0.2410538,0.0021781286,0.23514053,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs((np.array(range(1, array_x.shape[1]+1)))))/array_x-array_x, axis=1)",1.0,0.90047085,0.0,0.95654595,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs((np.array(range(1, array_x.shape[1]+1)))+array_x)), axis=1)",0.6613663,0.918586,0.0,0.9827985,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(1.6182069466288023+array_x-2.756197459158545))+9.234750397068607+np.cos(2*np.pi*array_x+6.27878603864449)*np.round((np.array(range(1, array_x.shape[1]+1))))/8.168590780332082, axis=1)",0.66643775,0.9964085,0.0,0.71102697,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(10*(np.sqrt(abs(array_x+5.680133756408897-3.7138694205926734))))), axis=1)",0.78426504,0.97712666,0.0,0.90696985,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(3.284598740845488/array_x/array_x-7.500531857382276))+6.405691639670789, axis=1)",0.6958705,0.69372356,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(3.411819823461868*array_x+array_x+9.872782435837046+array_x)), axis=1)",0.7070691,1.0,0.0,0.9346839,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(7.754494566386796))-np.cos(2*np.pi*2.868850249880466/array_x)-np.sin(2*np.pi*6.630294530894703)+array_x/np.cos(2*np.pi*array_x/2.117675044187908/5.4058164054603175), axis=1)",0.99281424,0.5287896,0.18573405,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(9.76277146509974-np.sqrt(abs(array_x)))), axis=1)",0.0,1.0,0.11843229,0.01375831,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(array_x*9.741864624390375*np.square(5.144958568543791*array_x+3.700868594835039)))-np.log(abs(4.949074372037481-array_x*array_x)), axis=1)",0.8192279,1.0,0.0,0.6712441,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x)))+1.4049660755531566, axis=1)",0.57762307,0.67593426,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(np.cos(2*np.pi*10*(array_x))))-8.347131035962807, axis=1)",0.32597145,0.535068,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(np.cos(2*np.pi*np.sqrt(abs(np.sqrt(abs(array_x))))-np.log(abs((np.array(range(1, array_x.shape[1]+1)))))))), axis=1)",0.716967,0.74690455,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(np.sin(2*np.pi*array_x+array_x))), axis=1)",0.6139683,0.5719938,0.0,0.93097806,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.log(abs(np.sin(2*np.pi*np.exp(10*((np.array(range(1, array_x.shape[1]+1)))*array_x))-(np.array(range(1, array_x.shape[1]+1)))))), axis=1)",0.62217,0.4010141,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.round(1.8018129995574026-10*(array_x))-4.351411242994729/array_x, axis=1)",0.8575726,0.3629603,0.78467345,0.9996061,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.round(np.cos(2*np.pi*4.459850983298271))/np.cos(2*np.pi*10*(array_x)/np.log(abs(3.05214574368063))), axis=1)",0.8640527,0.030494649,0.6674711,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.round(np.sqrt(abs(-(array_x)*7.144599403293792))-5.556522509832366), axis=1)",1.0,1.0,0.0,0.5,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.round(np.square(np.sin(2*np.pi*1/(6.964249220399882))+1/(3.475994149335434+(np.array(range(1, array_x.shape[1]+1)))-array_x-array_x))), axis=1)",0.0,0.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*3.133594944091162+1/(array_x)), axis=1)",0.1683471,1.0,0.0,0.4801168,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*5.680053398797638/array_x+array_x+9.810938661794848)*np.cumsum(abs(array_x)/5.93654978150279-array_x+5.298985872270448, axis=1), axis=1)",0.0,0.54898477,0.018530302,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*5.738008232586707/np.sqrt(abs(array_x))*np.sqrt(abs(array_x))/3.0503504320356623+abs(6.142997588734477/array_x+8.231980140055718/np.cos(2*np.pi*1.177623258102693)-array_x)), axis=1)",0.43662786,0.43364742,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*7.22240367530522+1.995823481354197*6.432621510193927-array_x), axis=1)",0.11935335,1.0,0.0,0.85539913,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*array_x*np.round(2.7019129814072045))-9.739892341637697, axis=1)",0.0,0.22380652,0.03813536,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*np.cos(2*np.pi*np.square(array_x-(np.array(range(1, array_x.shape[1]+1))))/np.square(np.square(array_x)))), axis=1)",0.030681908,0.8366508,0.0,0.8070335,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*np.log(abs(9.601403502384066))-np.log(abs(array_x))/array_x+8.914814971192321), axis=1)",0.06493564,0.676203,0.022399768,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*np.sin(2*np.pi*np.log(abs(np.sin(2*np.pi*np.exp(array_x+array_x/8.2895724926326)))))), axis=1)",0.06460692,0.09857007,0.033464257,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*np.square(2.012867058660038-array_x*4.926998264608627)), axis=1)",0.042151697,0.13180545,0.062572844,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*np.square(array_x/3.6139064988181455)), axis=1)",0.013456422,0.93143034,0.0,0.9667043,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sin(2*np.pi*np.square(np.log(abs(array_x*4.138805417465798)))-np.square(7.6875847692992/7.870003972236646-array_x)), axis=1)",0.17341456,0.6255299,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(-(np.round(np.log(abs(np.log(abs((np.array(range(1, array_x.shape[1]+1)))*array_x+4.408827798690508*9.98533778856789+(np.array(range(1, array_x.shape[1]+1)))*array_x)))))*4.461875095102872+(np.array(range(1, array_x.shape[1]+1)))*array_x-np.square(5.881272334337883)+6.444791783081226))), axis=1)",0.0,1.0,0.10276603,0.015828295,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(1.3562048436141483+array_x*4.161631029098471))/np.cos(2*np.pi*np.square(np.sin(2*np.pi*7.327154306886924-7.050380849939833*array_x))), axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(8.853994699561643+array_x*5.71470226152589))/np.cos(2*np.pi*np.square(np.sin(2*np.pi*9.571264869361958-8.668768489114438*array_x))), axis=1)))",0.9815772,0.0,0.8752701,0.9998379,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(9.823697860318742-np.square(array_x+5.166754645116846)-np.sin(2*np.pi*np.log(abs(4.162603635199577)))+array_x)), axis=1)+np.sin(2*np.pi*np.mean(np.sqrt(abs(3.6138829620204964-np.square(array_x+9.143970424895162)-np.sin(2*np.pi*np.log(abs(9.177836302714537)))+array_x)), axis=1))",1.0,0.3061758,0.1233239,0.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(array_x+8.490017513300199))*(np.array(range(1, array_x.shape[1]+1))), axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(array_x+3.7765645524812053))*(np.array(range(1, array_x.shape[1]+1))), axis=1)))",0.0,0.20658761,0.1175237,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(array_x/6.244230223834935/np.sqrt(abs(4.497455643242495*array_x-4.8826965253731975)))), axis=1)",0.5828086,1.0,0.0,0.57933176,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.exp(array_x)/5.863852199516236))/2.458530778722732, axis=1)+np.sin(2*np.pi*np.mean(np.sqrt(abs(np.exp(array_x)/8.457060723838078))/7.961174085324155, axis=1))",0.0,1.0,0.1262231,0.005240208,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.exp(np.sqrt(abs(10*(array_x)))*10*(1.9447372292763325)))), axis=1)",0.031352583,0.64334995,0.21579231,0.0019272586,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.exp(np.square(array_x*array_x)-array_x/2.4489469238632546)*4.5831839617625825*array_x)), axis=1)",0.85217714,0.7945301,0.16698816,0.36741477,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.round(array_x)))-8.027674160635335+array_x, axis=1)",0.0,1.0,0.11024222,0.0044886484,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.sin(2*np.pi*9.598828025829894*10*(array_x))))-10*(np.sqrt(abs(array_x))*6.629660125921123)+np.sin(2*np.pi*4.203217458963236), axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(np.sin(2*np.pi*9.353070556764786*10*(array_x))))-10*(np.sqrt(abs(array_x))*8.815989204763206)+np.sin(2*np.pi*5.105785928438793), axis=1)))",0.0,1.0,0.24340048,0.44287068,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.sqrt(abs(1.9698627505241573-array_x))*2.797851495769319)), axis=1)",0.6282783,1.0,0.0,0.59608126,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.sqrt(abs(array_x)))), axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(np.sqrt(abs(array_x)))), axis=1)))",0.06377625,0.21141897,0.0,0.67885256,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.sqrt(abs(array_x*7.959924430752711)))), axis=1)+np.sin(2*np.pi*np.mean(np.sqrt(abs(np.sqrt(abs(array_x*8.349163547541085)))), axis=1))",0.999949,0.4641295,0.49962115,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.sqrt(abs(np.sqrt(abs(np.sin(2*np.pi*np.log(abs(array_x)))*np.sin(2*np.pi*3.535540832112534))))), axis=1)",0.2875027,0.52472067,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square((np.array(range(1, array_x.shape[1]+1)))*array_x*9.227184577716283-abs(1.5164832895015183)+8.61485861018506+np.round((np.array(range(1, array_x.shape[1]+1)))*array_x/1.4483561511033853)), axis=1)",0.7598243,1.0,0.093915336,0.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square((np.array(range(1, array_x.shape[1]+1)))-array_x*2.8568361907879716-array_x+array_x+np.log(abs(9.918284834517943+array_x))/np.square(9.716465228662827)), axis=1)",0.17146865,0.9149072,0.0,0.6306877,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(1/(9.064764049017288-np.sqrt(abs(6.021844575104359))+array_x)), axis=1)",0.0,1.0,0.0857177,0.012856374,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(1/(array_x))+10*(array_x/(np.array(range(1, array_x.shape[1]+1))))-2.519311339124463, axis=1)",0.0,1.0,0.2507762,0.009758508,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(2.6188297917763466-np.exp(np.sin(2*np.pi*array_x)))/-(7.726346670793239), axis=1)-np.sin(2*np.pi*5.868240712318061)",0.03363729,0.34897485,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(3.847678329959161*np.cos(2*np.pi*array_x)+4.723941364475893-np.cos(2*np.pi*np.square(1.1569041544188727))), axis=1)+10*(np.sin(2*np.pi*np.mean(np.square(2.4220787578683542*np.cos(2*np.pi*array_x)+5.746847348568895-np.cos(2*np.pi*np.square(9.572771878993583))), axis=1)))",0.20667726,0.05389071,0.00022908245,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(7.812392939569914*9.02470567320492-array_x*np.sin(2*np.pi*array_x-8.502315266326388)-np.round(1.1468037812741843)-np.sqrt(abs(array_x))), axis=1)",0.0072669964,0.82949066,0.006925932,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(8.845138351740346)-np.square(np.log(abs(array_x))), axis=1)",0.98317796,0.7166677,0.0,0.92851186,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(9.175445763841624-array_x/3.600310487167288), axis=1)",0.0,1.0,0.07582642,0.0098680835,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(9.382854051182026)-5.896319550505663-np.exp(array_x)-array_x-np.sin(2*np.pi*7.927918679409067)-(np.array(range(1, array_x.shape[1]+1)))-np.log(abs(1.113504643510906))*1.7436352249374123, axis=1)+10*(np.sin(2*np.pi*np.mean(np.square(6.979219357544432)-7.795264081564923-np.exp(array_x)-array_x-np.sin(2*np.pi*8.884718239599042)-(np.array(range(1, array_x.shape[1]+1)))-np.log(abs(5.180292994873069))*6.099468591555405, axis=1)))",0.0,0.53783613,0.025946673,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(abs(np.sin(2*np.pi*np.sin(2*np.pi*array_x)))+array_x+array_x)-1.4170314289449037+array_x, axis=1)",0.8599582,0.9062798,0.0,0.52685636,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(np.cos(2*np.pi*array_x))*np.square(np.square(abs(array_x)))-array_x/7.677964155946852, axis=1)+10*(np.sin(2*np.pi*np.mean(np.square(np.cos(2*np.pi*array_x))*np.square(np.square(abs(array_x)))-array_x/2.9224968523131105, axis=1)))",0.1353707,0.114762604,0.003719258,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(np.cos(2*np.pi*np.exp(array_x)*array_x*np.sqrt(abs(np.exp(3.606484116895012))))), axis=1)",0.20567991,0.67781645,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(np.cumsum(5.364262850999639-array_x, axis=1)*np.sqrt(abs(9.880712015603638)))*array_x+7.5996359066727+np.log(abs(np.log(abs(4.663620928536744)))), axis=1)",0.0,1.0,0.097757764,0.01868574,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(np.log(abs(np.square(5.977611919610055))))-np.square(np.exp(array_x)), axis=1)",0.0,0.70149076,0.024529466,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(np.square(np.sin(2*np.pi*6.097846465094929*array_x)))-3.409885281032776, axis=1)",0.0,0.26625752,0.004561151,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.mean(np.square(np.square(np.square((np.array(range(1, array_x.shape[1]+1)))*array_x)+(np.array(range(1, array_x.shape[1]+1)))*array_x+4.325351567777842+np.sin(2*np.pi*1.0724062760984057))), axis=1)",0.221775,0.5329645,0.40640044,0.20788623,0.2829247,0.5590774,0.110538505,0.6710259
"np.prod(6.611967982892396+np.square(np.square(np.log(abs(array_x)))+6.208128092610663*array_x), axis=1)",0.18443543,1.0,0.0,0.21752979,0.2829247,0.5590774,0.110538505,0.6710259
"np.prod(abs(6.96621620386593*array_x)+4.376728806219151, axis=1)+np.sin(2*np.pi*np.prod(abs(9.22328381743699*array_x)+7.267524583142695, axis=1))",0.55556524,1.0,0.0,0.21418113,0.2829247,0.5590774,0.110538505,0.6710259
"np.prod(np.log(abs(array_x*array_x)), axis=1)-array_x[:,0]+7.665598945636369+np.sqrt(abs(np.prod(np.sqrt(abs(array_x)), axis=1)))",0.9776873,0.6396843,0.1933807,0.763978,0.2829247,0.5590774,0.110538505,0.6710259
"np.prod(np.sqrt(abs(np.cos(2*np.pi*array_x+4.310616085025579))), axis=1)*4.9462302266139595",0.34797177,0.5290397,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(4.293545467344941-np.square(np.prod(np.square(2.589807290048806)+array_x-np.sin(2*np.pi*1.3551454162989938), axis=1)))",0.0,1.0,0.09462625,0.008151757,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.amax(np.exp(4.013739716673834)/10*(array_x)-2.117989113150294, axis=1))",0.0,1.0,0.0,0.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.log(abs(np.sqrt(abs(np.sum(np.square(np.exp(7.287573139131565-array_x-np.log(abs(9.838783188076679)))), axis=1))))))",0.0,0.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(6.6693213183816935+array_x-4.10322834871833+array_x-np.sin(2*np.pi*array_x), axis=1))",0.0,0.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(np.log(abs(1/(np.sin(2*np.pi*4.71300747815282))-np.sin(2*np.pi*np.log(abs(array_x))))), axis=1))",1.0,1.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(np.log(abs(array_x))*np.sin(2*np.pi*8.931725155405438/array_x)-np.sin(2*np.pi*array_x*array_x)-3.109960131602625, axis=1))",1.0,1.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(np.log(abs(array_x+2.8608211558058865+6.945529068524529/array_x))+np.square(np.sin(2*np.pi*array_x)), axis=1))",0.0,0.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(np.round(2.1133580204304123*array_x)-array_x+np.log(abs(1.1045822451351515))*5.6650964517225075, axis=1))",0.0,0.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(np.sqrt(abs(-(array_x))), axis=1))",0.0,0.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(np.square(8.643470139770415-array_x), axis=1))",0.0,1.0,0.0,0.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.mean(np.square(np.round(4.831596387759051+array_x/3.5000732860905543)), axis=1))",0.0,0.0,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.round(np.sqrt(abs(np.cos(2*np.pi*np.mean(np.sin(2*np.pi*array_x-7.640418955181535), axis=1))))+np.sum(array_x+8.2573634265076+array_x, axis=1))",0.0,1.0,0.0,0.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sin(2*np.pi*np.cos(2*np.pi*np.sum(array_x, axis=1)-np.square(9.458949734448785)))+8.906475839953808",0.07013559,0.003936158,0.0031642078,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sin(2*np.pi*np.mean(array_x+array_x+8.172697926320904, axis=1))*abs(10*(8.979026783439629))",0.036963783,0.0021745793,5.1810337e-05,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sin(2*np.pi*np.square(2.559740937367579/np.exp(np.amax(array_x, axis=1))))/7.341155891202936-8.208690709019727",1.0,0.050085146,0.006334735,0.25481164,0.2829247,0.5590774,0.110538505,0.6710259
"np.sin(2*np.pi*np.square(np.mean(np.cos(2*np.pi*array_x*4.306334143111432), axis=1))+np.log(abs(np.square(7.948219159738603))))",0.0051701902,0.00030148384,0.005412602,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sqrt(abs(9.01285367782945))*np.sqrt(abs(np.sum(array_x, axis=1)))-8.300217135338567+10*(np.sin(2*np.pi*np.sqrt(abs(4.186775454503673))*np.sqrt(abs(np.sum(array_x, axis=1)))-9.75603893139827))",0.11763785,0.042382963,0.029058598,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sqrt(abs(np.amax(np.cumsum(abs(8.319761006610198/array_x)/array_x-array_x-4.119946225934431, axis=1), axis=1)))",0.45787483,0.0,0.26014587,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sqrt(abs(np.amax(np.sqrt(abs(np.exp(array_x+6.151520910365725+array_x))), axis=1)))",0.0,1.0,0.43896702,0.006580597,0.2829247,0.5590774,0.110538505,0.6710259
"np.sqrt(abs(np.mean(np.exp(abs(np.exp(np.sin(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))/array_x+np.log(abs(4.564924717400028))))-1.0969553477746807)), axis=1)))",0.16939388,0.24270338,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sqrt(abs(np.prod(1.375031064878831-array_x, axis=1)))",0.16423619,1.0,0.0,0.66146225,0.2829247,0.5590774,0.110538505,0.6710259
"np.sqrt(abs(np.sum(1/(array_x), axis=1)))/6.152516740146886+array_x[:,0]/8.701938242229392",0.19862436,1.0,0.058101125,0.085604645,0.2829247,0.5590774,0.110538505,0.6710259
"np.square(-(1/(7.077704796837213))/array_x[:,0]-np.sqrt(abs(1.714227483019201))/np.log(abs(np.amax(np.sqrt(abs(3.524312411540573-array_x*np.exp(array_x))), axis=1))))",0.71449584,0.026684487,0.0,0.58931625,0.2829247,0.5590774,0.110538505,0.6710259
"np.square(1.7768467569452455+np.mean(array_x, axis=1))",0.37451726,0.0,0.004472665,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.square(abs(4.085942004964727))+np.exp(np.sqrt(abs(10*(3.832069452093688)*np.sqrt(abs(np.sum(abs(array_x), axis=1))))))+np.sin(2*np.pi*np.square(abs(2.535682980331363))+np.exp(np.sqrt(abs(10*(6.465809327314086)*np.sqrt(abs(np.sum(abs(array_x), axis=1)))))))",0.72143865,0.96926874,0.0,0.38551846,0.2829247,0.5590774,0.110538505,0.6710259
"np.square(np.square(np.square(8.661150126446882+array_x[:,0]+array_x[:,0])+np.prod(array_x+5.294339894988571, axis=1)))",0.0,1.0,0.18697152,0.027593631,0.2829247,0.5590774,0.110538505,0.6710259
"np.square(np.sum(array_x+array_x, axis=1)-3.815161503932133-np.sum(array_x, axis=1))+np.sin(2*np.pi*np.square(np.sum(array_x+array_x, axis=1)-1.3079814610722524-np.sum(array_x, axis=1)))",0.06666426,0.0059449617,0.086079344,0.65077573,0.2829247,0.5590774,0.110538505,0.6710259
"np.square(np.sum(np.exp(1.6587839430835079-array_x), axis=1)*5.725502142883024)",0.0,1.0,0.17734131,0.015504981,0.2829247,0.5590774,0.110538505,0.6710259
"np.sum(array_x*7.817923815869611-abs(array_x)+5.604791017502943, axis=1)",0.0,1.0,0.09877342,0.0070317197,0.2829247,0.5590774,0.110538505,0.6710259
"np.sum(array_x-9.252541977343695, axis=1)-1.4806294586866202-array_x[:,0]+6.8992679507984755",0.0,1.0,0.07504431,0.01357202,0.2829247,0.5590774,0.110538505,0.6710259
"np.sum(np.cos(2*np.pi*array_x), axis=1)+np.sin(2*np.pi*np.sum(np.cos(2*np.pi*array_x), axis=1))",0.07725267,0.152543,0.0,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sum(np.sin(2*np.pi*9.818803229196432+array_x+2.514082803405106), axis=1)",0.16164428,0.59516126,0.0,0.8567682,0.2829247,0.5590774,0.110538505,0.6710259
"np.sum(np.sin(2*np.pi*np.log(abs(np.round(3.3181732961981703+np.square(array_x*6.553822165167681))))), axis=1)",0.078438655,0.29803345,0.005557371,1.0,0.2829247,0.5590774,0.110538505,0.6710259
"np.sum(np.square(np.cumsum(array_x, axis=1)), axis=1)",1.0,0.30492416,0.10426822,0.02450332,0.2829247,0.5590774,0.110538505,0.6710259
