,true_PSO,true_GA,true_DE,true_ES,pred_PSO,pred_GA,pred_DE,pred_ES
"-(np.sqrt(abs(10*(np.cos(2*np.pi*np.sum(array_x, axis=1))/7.192358767161206))))",1.0,0.044038143,0.0,0.060947806,0.61576945,0.040916305,0.3855303,0.7412047
"1.725346217431885-np.sin(2*np.pi*np.sum(array_x/6.117220771858262, axis=1))",0.59193885,0.010588876,0.033022225,0.01102655,0.61576945,0.040916305,0.3855303,0.7412047
"1/(abs(9.920203869316945+np.mean(array_x, axis=1)*np.cos(2*np.pi*4.169376148639605)))",0.0,0.012135967,0.029453918,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"1/(np.sum(2.758439111115859/array_x, axis=1))",1.0,0.0,0.9864872,0.9473715,0.61576945,0.040916305,0.3855303,0.7412047
"10*(np.prod(np.log(abs(array_x+3.835458606847915))-8.458426115431976+array_x/1.631046176706231, axis=1))",0.0,0.0073178345,0.020789245,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"10*(np.sum(np.sqrt(abs(array_x+4.903345963706272)), axis=1))",0.30993378,0.0,0.18364581,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"3.202475354292209-6.187473051089541/9.240548015244588-np.sum(array_x, axis=1)+np.sin(2*np.pi*1.2542339702513745-6.486732281097695/7.639384279144161-np.sum(array_x, axis=1))",0.0,0.037432566,0.0955325,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"5.175861021452057/np.sum(4.121984462987276/1.1635809077335337+array_x-5.059448541224359, axis=1)",0.9653608,0.0,0.89804524,0.96566516,0.61576945,0.040916305,0.3855303,0.7412047
"6.850088267845278+np.sum(np.cos(2*np.pi*8.067670861119215+array_x), axis=1)",0.16817369,0.0,0.9048864,0.79953897,0.61576945,0.040916305,0.3855303,0.7412047
"abs(np.amax(np.round(9.818468479141284+array_x), axis=1))",1.0,0.0,0.29166666,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"abs(np.prod(6.377615756984854+np.sqrt(abs(array_x-np.round(9.718110849266278))), axis=1))",0.0,0.007518236,0.037992865,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(10*(np.cos(2*np.pi*2.9927751497195123*array_x))/5.977972872072998, axis=1)",1.0,0.0,0.4871046,0.6714737,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(10*(np.exp(4.842816457025784)*array_x+np.sqrt(abs(-(9.49076677207911)))), axis=1)",1.0,0.0,0.9431238,0.18789116,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(9.742253657242934*array_x-np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1))))-8.67347081035107, axis=1)+np.sin(2*np.pi*np.amax(2.6310937191134722*array_x-np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1))))-4.267301754158796, axis=1))",1.0,0.0,0.31637236,0.042924065,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(array_x, axis=1)*2.5984420015757284+np.sin(2*np.pi*np.amax(array_x, axis=1)*4.009129727303002)",1.0,0.0,0.4430902,0.105378315,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(array_x, axis=1)+np.sqrt(abs(np.sum(array_x/3.9934702415362575, axis=1)))+2.4111542037835534",0.9314385,0.72444487,0.9922512,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(np.log(abs(np.sin(2*np.pi*array_x))), axis=1)+np.log(abs(5.2858634173812575))/4.153242736579513+np.sqrt(abs(np.cos(2*np.pi*np.amax(array_x-(np.array(range(1, array_x.shape[1]+1)))+array_x, axis=1))))",0.6900003,0.0,0.44383973,0.9295703,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(np.round(4.022980826236156+array_x/4.376541317023419+np.sqrt(abs(array_x))/np.cos(2*np.pi*8.806658425495431-array_x+4.598467015116318)), axis=1)",0.0,0.0,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.amax(np.square(1.7216620878088125*3.4469392757449135-array_x)-array_x-3.3904159661600355-np.sin(2*np.pi*np.exp(7.880044474973119))-3.824995516762643+5.278268629219568, axis=1)",0.11255882,0.015108619,1.0,0.35436454,0.61576945,0.040916305,0.3855303,0.7412047
"np.cos(2*np.pi*np.log(abs(np.sum(10*(array_x)-6.718191160124967+np.square(6.035478979002345), axis=1))))+10*(np.sin(2*np.pi*np.cos(2*np.pi*np.log(abs(np.sum(10*(array_x)-7.725862383127707+np.square(4.291154123101823), axis=1))))))",1.0,0.2619269,0.35854796,0.0085905,0.61576945,0.040916305,0.3855303,0.7412047
"np.cos(2*np.pi*np.mean(np.log(abs(np.cos(2*np.pi*array_x-(np.array(range(1, array_x.shape[1]+1))))-3.155106880645918)), axis=1))",0.77066004,0.0,0.28426024,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.cos(2*np.pi*np.mean(np.sin(2*np.pi*np.log(abs(np.sqrt(abs(5.217861048143802))))+array_x)*np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))-8.104119794033359))-2.3796833920430323*-(np.sin(2*np.pi*array_x)), axis=1))+10*(np.sin(2*np.pi*np.cos(2*np.pi*np.mean(np.sin(2*np.pi*np.log(abs(np.sqrt(abs(7.938525745655334))))+array_x)*np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))-4.237442018544881))-9.027439717519155*-(np.sin(2*np.pi*array_x)), axis=1))))",1.0,0.17636581,0.086096056,0.027914124,0.61576945,0.040916305,0.3855303,0.7412047
"np.cos(2*np.pi*np.mean(np.square((np.array(range(1, array_x.shape[1]+1)))*array_x), axis=1)-2.354239689628258+np.cos(2*np.pi*2.693850305302142))",0.87900627,0.034952488,0.0065999255,0.02889789,0.61576945,0.040916305,0.3855303,0.7412047
"np.cos(2*np.pi*np.square(np.sum(array_x*9.141163119894795, axis=1)))",1.0,0.0044483123,0.0,0.005867575,0.61576945,0.040916305,0.3855303,0.7412047
"np.exp(np.sin(2*np.pi*np.sum(array_x*8.01581184982065+3.5753351057104195+np.exp(9.505211614506742-array_x)/array_x, axis=1)))",0.068184815,0.17656305,0.44033018,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.log(abs(np.cos(2*np.pi*7.629356449992657-np.sum(np.sqrt(abs(array_x)), axis=1)*3.3691386310853875*3.7573338506882106)*-(1/(8.956715834773687))))",1.0,0.6336765,0.6923421,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.log(abs(np.sin(2*np.pi*np.prod(7.066212580029478/array_x, axis=1))))",1.0,0.4689403,0.3063683,0.38690796,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean((np.array(range(1, array_x.shape[1]+1)))*2.818562616144919+array_x+5.908536707232791-np.sin(2*np.pi*np.cumsum(np.sin(2*np.pi*array_x), axis=1))/array_x*8.533070001518686, axis=1)",0.99225956,0.7730135,1.0,0.45762947,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean((np.array(range(1, array_x.shape[1]+1)))*np.square(array_x)+(np.array(range(1, array_x.shape[1]+1)))/7.298478039479368, axis=1)+np.sin(2*np.pi*np.mean((np.array(range(1, array_x.shape[1]+1)))*np.square(array_x)+(np.array(range(1, array_x.shape[1]+1)))/7.821233073005148, axis=1))",0.99988747,0.0010354188,0.9998464,0.9998553,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean((np.array(range(1, array_x.shape[1]+1)))-4.54421011660796/np.cos(2*np.pi*np.square(array_x)), axis=1)+np.sin(2*np.pi*np.mean((np.array(range(1, array_x.shape[1]+1)))-1.7261194769234076/np.cos(2*np.pi*np.square(array_x)), axis=1))",1.0,0.5246805,0.965117,0.3456313,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(-(1.065709710429998/np.square(1.4339271261145883+array_x/np.cos(2*np.pi*array_x))), axis=1)",0.9994679,0.0,1.0,0.9977528,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(-(3.1844551437046507/1.188012530438007*array_x-abs(3.7390318719375895)), axis=1)+np.sin(2*np.pi*np.mean(-(6.284633912108377/1.2990178384672997*array_x-abs(5.992930549599177)), axis=1))",0.49822417,0.0,0.00017078019,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(-(abs(6.908767123698853))/1.8073014575810948+array_x, axis=1)+np.sin(2*np.pi*np.mean(-(abs(6.802091459925692))/9.608045547301398+array_x, axis=1))",1.0,0.0,6.807556e-06,0.3333335,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(-(np.cos(2*np.pi*5.377291721418011)+array_x/np.sqrt(abs(9.5357900476296-array_x))), axis=1)+np.sin(2*np.pi*np.mean(-(np.cos(2*np.pi*1.088888253727983)+array_x/np.sqrt(abs(3.4204067970211174-array_x))), axis=1))",1.0,0.0,0.3204914,0.80619496,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(-(np.cos(2*np.pi*np.cos(2*np.pi*np.cos(2*np.pi*array_x-array_x)))), axis=1)",1.0,0.0,0.048011016,0.58965147,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(-(np.exp(array_x)+abs(1.6004395099858884)*np.square(array_x)/6.042160866027247*np.square(7.537794029914294)-np.sqrt(abs(array_x))), axis=1)",0.8541537,0.0,0.03983083,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(-(np.square((np.array(range(1, array_x.shape[1]+1)))*array_x)), axis=1)",0.0,0.096717075,0.014984148,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1.021892771215172+array_x/2.9093304964575943, axis=1)+np.sin(2*np.pi*np.mean(4.764319299606431+array_x/8.11583372863944, axis=1))",1.0,0.0033075516,0.30655774,0.0024642958,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1.5224375223532767/array_x-9.70899332341379-1.1279608044563254/np.cos(2*np.pi*np.sin(2*np.pi*array_x))*7.3999415381186715, axis=1)",1.0,0.0,0.99278176,0.5966174,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1.8669334810729268+array_x-np.cos(2*np.pi*array_x)-np.exp((np.array(range(1, array_x.shape[1]+1)))-2.7288166518154435*array_x+1.7140244085281449), axis=1)",1.0,0.00689146,0.0,0.43844515,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1/(2.2782673046027964)-array_x+np.exp((np.array(range(1, array_x.shape[1]+1))))*9.90548580462671*3.298711333060859, axis=1)+np.sin(2*np.pi*np.mean(1/(2.807313366409316)-array_x+np.exp((np.array(range(1, array_x.shape[1]+1))))*9.589797671543733*4.007761267684479, axis=1))",1.0,0.0,4.7651865e-06,0.02139919,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1/(5.754991607434046-array_x+np.round(5.0393054713146554/array_x)), axis=1)",0.75362754,0.0,0.77870435,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1/(6.878305577677445*np.sin(2*np.pi*array_x)), axis=1)",1.0,1.0,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1/(8.559859153492985-array_x), axis=1)",0.0,0.016530141,0.059271168,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(1/(array_x)-np.sqrt(abs(8.386286477344541)), axis=1)+10*(np.sin(2*np.pi*np.mean(1/(array_x)-np.sqrt(abs(6.4588957731302115)), axis=1)))",0.9957625,0.0,1.0,0.98215246,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(10*(7.263729402162507/array_x)+4.82107872729257/-(4.625599575026699+array_x)-array_x, axis=1)",0.95929134,0.0,1.0,0.90027654,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(10*(np.log(abs(5.002168871123977*9.299818183668968+(np.array(range(1, array_x.shape[1]+1)))*array_x/np.exp(3.1176154500033784))))+6.1885516832145795/(np.array(range(1, array_x.shape[1]+1)))*array_x, axis=1)",0.0,0.00708565,0.039034773,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(10*(np.sqrt(abs(np.square(abs(5.596693106640592*array_x))-6.9224480178748475))), axis=1)",0.58903605,0.0,0.8706303,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(10*(np.square(6.948193957036988)+np.sqrt(abs(array_x))), axis=1)+np.sin(2*np.pi*np.mean(10*(np.square(8.98748557221817)+np.sqrt(abs(array_x))), axis=1))",0.50868744,0.0,0.851015,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(2.6750551718249964*array_x, axis=1)+4.359010408238526+10*(np.sin(2*np.pi*np.mean(3.4223446874941956*array_x, axis=1)+2.518746355933768))",1.0,0.0,0.21478803,0.59258276,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(3.2438779486348084*np.sqrt(abs(array_x))*np.log(abs(array_x-5.968148071958888)), axis=1)+10*(np.sin(2*np.pi*np.mean(2.410738567683798*np.sqrt(abs(array_x))*np.log(abs(array_x-4.468531557193156)), axis=1)))",0.7119035,0.0,0.7556876,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(3.4323263730783933/array_x+5.492560116233616, axis=1)+np.sin(2*np.pi*np.mean(1.316469156911321/array_x+7.393987920601086, axis=1))",0.9518078,0.0,1.0,0.94856054,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(4.241247356176643+np.square(array_x), axis=1)+10*(np.sin(2*np.pi*np.mean(9.386360400802767+np.square(array_x), axis=1)))",0.0004690091,0.0,0.29808176,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(4.778635025947253+6.919555773065311/array_x/5.218641780661143*np.cos(2*np.pi*5.464798023351758+(np.array(range(1, array_x.shape[1]+1)))-1.1175041955939726), axis=1)",0.9449297,0.0,1.0,0.9582474,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(4.862150798652049-array_x/4.61103817403953, axis=1)+np.sin(2*np.pi*np.mean(6.25745380116755-array_x/4.373863090362434, axis=1))",0.6630026,0.0,0.23859781,0.020866355,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(5.086039493531909*array_x-7.746972801950379+np.cos(2*np.pi*array_x), axis=1)",0.05216602,0.0,0.13914476,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(5.484775577671378+array_x-2.48643450570001/array_x*2.4668910759805733, axis=1)+10*(np.sin(2*np.pi*np.mean(5.2339174591129884+array_x-6.843919631290726/array_x*9.593518316209064, axis=1)))",0.7226538,0.10905723,1.0,0.6663817,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(5.981817244059305-np.square(array_x), axis=1)+np.sin(2*np.pi*np.mean(2.828955955038544-np.square(array_x), axis=1))",0.111737736,0.0,1.0996751e-05,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(6.042178587329572/np.square(array_x/np.log(abs(1.0625516076094836))), axis=1)+np.sin(2*np.pi*np.mean(2.7242748929221587/np.square(array_x/np.log(abs(5.237361868141484))), axis=1))",1.0,0.0,0.0008213282,0.040741105,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(6.150710314430468*np.cos(2*np.pi*np.log(abs(np.sqrt(abs(6.624030473307528-array_x)))))/np.exp(7.312707737005128), axis=1)",1.0,0.0,0.05187618,0.14444698,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(6.998869171829311+array_x*8.147242163786142+array_x+array_x, axis=1)+np.sin(2*np.pi*np.mean(3.9535718014631787+array_x*3.613136752184797+array_x+array_x, axis=1))",0.4626648,0.0,1.6941676e-05,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(7.584805031624924+np.square(5.409615668836814-np.square(array_x))-6.880265427435089, axis=1)+np.sin(2*np.pi*np.mean(1.749652394281696+np.square(5.9182663046902615-np.square(array_x))-6.437192315776665, axis=1))",0.20636155,0.0,0.68030775,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(7.765537534375708+np.round(np.log(abs(array_x))), axis=1)",0.787037,0.0,0.8754839,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(7.980744508545384+np.sqrt(abs(array_x*array_x*8.50976092086141)), axis=1)",0.032004114,0.0,0.5420717,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(8.159258562482261+np.sin(2*np.pi*np.exp(np.sqrt(abs(np.sqrt(abs(array_x))))+np.round(4.758161139444207))), axis=1)+np.sin(2*np.pi*np.mean(2.9125972195699497+np.sin(2*np.pi*np.exp(np.sqrt(abs(np.sqrt(abs(array_x))))+np.round(5.549962981776783))), axis=1))",0.9871285,0.0,0.41126102,0.98307925,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(8.560909648784467+np.sqrt(abs(array_x))-1/(np.cos(2*np.pi*array_x+2.827352024545904)), axis=1)+np.sin(2*np.pi*np.mean(9.09237372584247+np.sqrt(abs(array_x))-1/(np.cos(2*np.pi*array_x+2.3845533752537103)), axis=1))",1.0,0.063121706,0.9788888,0.6315716,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(abs(8.796357866038397*array_x-7.081458793897386)-9.353534073247827, axis=1)",0.080899395,0.0,0.5025827,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(abs(array_x+1.921624776806396), axis=1)+10*(np.sin(2*np.pi*np.mean(abs(array_x+1.659664434260152), axis=1)))",1.0,0.7083872,0.7688442,0.061202906,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(abs(array_x/2.175495948867412)*np.log(abs(np.sqrt(abs(np.cumsum(array_x, axis=1)-4.500292285785156))))*np.cos(2*np.pi*2.0989004114470573/2.976307497236868-(np.array(range(1, array_x.shape[1]+1))))+10*(array_x+9.021118804317316), axis=1)",0.0,0.0119967405,0.032258037,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(abs(np.square(3.0006649803230934+array_x)), axis=1)",0.0037713272,0.0,0.39707115,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x*1.4768718178840479-np.round(2.031157909136114)*np.log(abs(9.931132050496831)), axis=1)+np.sin(2*np.pi*np.mean(array_x*1.603701839285581-np.round(6.313882416800949)*np.log(abs(6.050108663054349)), axis=1))",1.0,0.0,2.6806367e-05,0.25015274,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x*6.346736371954186, axis=1)+np.sin(2*np.pi*np.mean(array_x*5.409072295119582, axis=1))",0.045537554,0.0,6.668205e-06,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x*np.cos(2*np.pi*2.9415055990746364)*np.sqrt(abs(4.832885793579949)), axis=1)+np.sin(2*np.pi*np.mean(array_x*np.cos(2*np.pi*8.398986138990653)*np.sqrt(abs(2.866079514642826)), axis=1))",1.0,0.0,7.688957e-09,0.07435714,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x+np.round(6.984577957648871*6.8711984649116316-array_x), axis=1)",0.89693123,0.0,0.47463068,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x-5.591425960472224/7.681105978026698-np.sqrt(abs(array_x))/8.192692910576913, axis=1)",0.0,0.010045121,0.02916348,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x-array_x, axis=1)-np.exp(7.477635647492603)+array_x[:,0]-np.sqrt(abs(10*(np.mean(array_x, axis=1))/8.781030994376174))+np.sin(2*np.pi*np.mean(array_x-array_x, axis=1)-np.exp(7.820176761913951)+array_x[:,0]-np.sqrt(abs(10*(np.mean(array_x, axis=1))/4.00077305148578)))",2.1747946e-05,0.048875295,0.00032553155,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x-array_x/1.4835180002400796, axis=1)+np.sin(2*np.pi*np.mean(array_x-array_x/5.632732703573448, axis=1))",1.0,0.0,8.8507906e-05,0.49999997,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x-np.sqrt(abs(2.0449377904636723))-9.412065479244108/abs(array_x)*5.695985548613803, axis=1)",0.99126273,0.0,1.0,0.9940142,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(array_x/9.135958578892755, axis=1)+np.sin(2*np.pi*np.mean(array_x/2.5205715468688985, axis=1))",1.0,0.0,0.0018027093,0.99999976,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x+8.811752757092542)/np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))*array_x+abs(6.514035552662048))), axis=1)",0.96658003,0.0,0.7878184,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*-(np.sin(2*np.pi*-(8.64831764348274))-array_x/(np.array(range(1, array_x.shape[1]+1)))*np.log(abs(array_x))+8.754265083013+4.309697714521421)), axis=1)",0.45602462,0.0,0.33203557,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*-(np.square(array_x)))+np.sqrt(abs(2.2209502042981484)), axis=1)",0.8997194,0.0,0.32348108,0.97550035,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*10*(np.sqrt(abs(np.cos(2*np.pi*2.987759456055946-(np.array(range(1, array_x.shape[1]+1)))*array_x)))*8.091446908640972)), axis=1)",1.0,0.0,0.14407027,0.89612764,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*6.199772684249298+np.exp(np.cos(2*np.pi*array_x))), axis=1)",0.6418856,0.0,0.38687474,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*7.6753414140377645+8.827171005470689*array_x), axis=1)",0.81350774,0.0,0.3203794,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*8.040595918104067-array_x), axis=1)",0.14875676,0.0,0.6875101,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*abs(array_x-np.exp(5.959493412933419))), axis=1)",0.49493083,0.0,0.21327205,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*array_x)*np.square(array_x)*np.cumsum(array_x+2.2279512075290056, axis=1)+array_x*3.693355611636839, axis=1)",0.98726314,0.0,0.45879608,0.9903282,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*array_x+5.138609923419093)-3.7441667931497915, axis=1)",0.5329127,0.0,0.29935777,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*array_x-8.72904082149033), axis=1)",0.569429,0.0,0.25832847,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*np.exp(np.exp(7.210573614862947-np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))*array_x*7.201873051472852))*8.791583389935937))), axis=1)",0.9137206,0.0,0.91014093,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cos(2*np.pi*np.square(array_x)-6.941314777847258*9.717453748017455), axis=1)",0.68918985,0.0,0.3296139,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cumsum(array_x+np.round(8.9235758604102), axis=1), axis=1)+np.sin(2*np.pi*np.mean(np.cumsum(array_x+np.round(3.3191042656448495), axis=1), axis=1))",0.9957409,0.0,5.3901582e-05,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cumsum(np.sin(2*np.pi*np.sqrt(abs(-(np.round(array_x))))-np.cos(2*np.pi*9.406935220481406)-9.803014100981501-array_x-array_x), axis=1), axis=1)",0.25080267,0.0,0.39281788,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cumsum(np.sqrt(abs(6.729590319340745))*(np.array(range(1, array_x.shape[1]+1)))-array_x+9.599122413205546-array_x, axis=1), axis=1)+10*(np.sin(2*np.pi*np.mean(np.cumsum(np.sqrt(abs(3.719315418114711))*(np.array(range(1, array_x.shape[1]+1)))-array_x+3.6336327695739263-array_x, axis=1), axis=1)))",0.77128154,0.0,0.19961046,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cumsum(np.square(3.6913435304553768+np.cos(2*np.pi*np.cos(2*np.pi*np.exp(np.sin(2*np.pi*array_x))))), axis=1), axis=1)",0.93264586,0.0,0.3247367,0.98261243,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.cumsum(np.square(np.square(3.425790199478761))/np.sin(2*np.pi*array_x+6.623147317284124)*3.1476973832940254-array_x, axis=1), axis=1)+np.sin(2*np.pi*np.mean(np.cumsum(np.square(np.square(3.7495795583871594))/np.sin(2*np.pi*array_x+9.141135926699267)*5.213187740402408-array_x, axis=1), axis=1))",1.0,0.38661775,0.99119246,0.087559745,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(10*(np.log(abs(7.906707438937807*array_x))-array_x-1/(np.square(4.144294650110394+array_x-3.9858049936201425/4.102001081374344)))), axis=1)+10*(np.sin(2*np.pi*np.mean(np.exp(10*(np.log(abs(1.309150005811973*array_x))-array_x-1/(np.square(3.14181814581889+array_x-4.333699607535298/4.5071387211695715)))), axis=1)))",1.0,0.0,0.0031111652,0.020428257,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(10*(np.sin(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x+7.27508095829215+(np.array(range(1, array_x.shape[1]+1)))*array_x-np.sin(2*np.pi*6.855698304486578)))), axis=1)",1.0,0.00066116214,0.00087532564,0.5969106,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(2.9653119383569213*array_x-np.exp(10*(array_x)))*3.742991035443488/(np.array(range(1, array_x.shape[1]+1))), axis=1)",1.0,0.0,0.0,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(3.1205785679382183-np.sin(2*np.pi*array_x*1.310869989014051-np.sin(2*np.pi*np.square(array_x)))), axis=1)",0.87513506,0.0,0.30972105,0.9743114,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(array_x)+array_x/abs(6.544623985537305), axis=1)+10*(np.sin(2*np.pi*np.mean(np.exp(array_x)+array_x/abs(9.985121585673106), axis=1)))",1.0,0.003957498,0.0022136807,0.012045566,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(np.cos(2*np.pi*array_x))-array_x*7.457249990189502, axis=1)+np.sin(2*np.pi*np.mean(np.exp(np.cos(2*np.pi*array_x))-array_x*2.776038132409495, axis=1))",0.033047356,0.0005759361,0.038148478,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(np.cos(2*np.pi*array_x/4.63535420356822*-(5.315561510276924)))/4.558295696439717, axis=1)+10*(np.sin(2*np.pi*np.mean(np.exp(np.cos(2*np.pi*array_x/8.289096832497062*-(4.600177277616246)))/6.37414401192183, axis=1)))",0.17291501,0.0,0.25701147,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(np.cos(2*np.pi*np.sqrt(abs(array_x))))+9.455010978493132, axis=1)",0.11121014,0.0,0.44467452,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(np.log(abs(array_x))+1.4172051250704305/9.28892517347831)/array_x*5.957058242076693, axis=1)+np.sin(2*np.pi*np.mean(np.exp(np.log(abs(array_x))+6.08944853645245/9.393714244470207)/array_x*6.528071983984247, axis=1))",1.0,0.0,0.8125,0.25,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(np.sin(2*np.pi*5.940374416444396)+array_x+np.square(array_x)), axis=1)",0.0,0.0911572,0.3543026,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.exp(np.sqrt(abs(np.cos(2*np.pi*np.exp(9.16623109371942+(np.array(range(1, array_x.shape[1]+1)))-np.sqrt(abs(array_x))*1/(8.007612976955095)/(np.array(range(1, array_x.shape[1]+1)))/array_x))))), axis=1)",0.9757474,0.0,0.15018433,0.9509269,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(1.9518276117952307/array_x/5.971276416960172+np.log(abs(7.838979398984343))/array_x*3.4249386907754005/array_x*7.634369600956831)), axis=1)+10*(np.sin(2*np.pi*np.mean(np.log(abs(4.162427390595615/array_x/7.410832400532547+np.log(abs(3.3691690000137187))/array_x*7.9383831261905415/array_x*2.4928579659487413)), axis=1)))",1.0,0.0,0.01466391,0.04747127,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(1/(array_x)-1.591454537780595)), axis=1)",0.86740094,0.0,0.92036605,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(1/(np.square(np.sin(2*np.pi*np.cos(2*np.pi*array_x))))/np.square(9.827310684486408)-10*(array_x))), axis=1)",0.82734036,0.0,0.8136787,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(10*(1.7591455920393309)+array_x*9.434234381629956*np.square(array_x))), axis=1)",0.77719754,0.0,0.8840083,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(2.0316971494238674+array_x/array_x*6.758108925152924*np.exp(array_x)-7.334243078251139*(np.array(range(1, array_x.shape[1]+1)))+4.3843455190322205)), axis=1)",0.813396,0.0,0.9189137,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(abs(array_x/array_x*array_x)/4.221927997836458/np.sqrt(abs(2.5233156908827845+array_x*9.057743223366696)))), axis=1)",0.8377805,0.0,0.8429099,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(array_x))/array_x*9.964611207786197+9.584494055280073, axis=1)",0.9673092,0.0,1.0,0.96727955,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(np.log(abs(10*(array_x)-4.0501786961337665))))-1.346832721506515*np.sqrt(abs(array_x)), axis=1)",0.95750636,0.0,0.9245005,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(np.log(abs(np.sin(2*np.pi*6.137783802184651*array_x)+np.log(abs(6.484207911457288))))))+np.sin(2*np.pi*3.1865828016272415), axis=1)",1.0,0.0,0.65844184,0.9450739,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(np.sin(2*np.pi*6.16690786566527-array_x)/8.15992852080037))+3.3559910252269303, axis=1)",0.7806781,0.0,0.85958976,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.log(abs(np.sin(2*np.pi*array_x))), axis=1)",0.94749635,0.0,0.74849683,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(1.8588773480297718)-np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))*array_x))*10*((np.array(range(1, array_x.shape[1]+1)))*array_x)/7.500892968897898, axis=1)",0.047549896,0.0052019563,0.022193905,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(9.889685390695306-array_x/5.457534876566125), axis=1)",1.0,0.0,0.0,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(abs(8.023169865903153-array_x)), axis=1)",0.0,0.0,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(abs(array_x+3.68829972923553))*array_x/1.23188759560299, axis=1)",0.9874549,0.0,0.01675018,0.9629612,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(np.cumsum(np.sin(2*np.pi*5.417992216360875)-array_x, axis=1))*array_x/7.0486595411069795/np.sqrt(abs(array_x)), axis=1)+np.sin(2*np.pi*np.mean(np.round(np.cumsum(np.sin(2*np.pi*1.079633816030178)-array_x, axis=1))*array_x/1.4345159473572495/np.sqrt(abs(array_x)), axis=1))",0.48796976,0.0,0.1666519,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(np.log(abs(array_x))+array_x), axis=1)+np.sin(2*np.pi*np.mean(np.round(np.log(abs(array_x))+array_x), axis=1))",1.0,0.0,0.78163564,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(np.sqrt(abs(2.992942486445759))-np.log(abs(np.log(abs(array_x))))-4.33260218825075), axis=1)",0.8541667,0.0,0.8660714,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(np.sqrt(abs(8.316727490816906))*np.sin(2*np.pi*(np.array(range(1, array_x.shape[1]+1)))*array_x)-np.round(3.912007434520956)), axis=1)",1.0,0.0,0.30952382,0.9444444,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.round(np.sqrt(abs(np.sin(2*np.pi*8.55742877773844)-np.sqrt(abs(array_x))))*2.691596829180105)/array_x-array_x*array_x-4.545324865097938, axis=1)",0.9703736,0.0,1.0,0.96583474,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*1.7074560663413716)+array_x+array_x, axis=1)+np.sin(2*np.pi*np.mean(np.sin(2*np.pi*8.378351322665816)+array_x+array_x, axis=1))",1.0,0.0,1.3219013e-06,0.1988721,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*2.8007191591468423+array_x*9.023120115782763+5.270150072657585*4.360942428646787-array_x/3.2876751327977116), axis=1)",0.7296299,0.0,0.22789958,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*5.8867421036211685+array_x*np.square(5.955621454116076)), axis=1)+np.sin(2*np.pi*np.mean(np.sin(2*np.pi*4.590787648080184+array_x*np.square(4.682016810582072)), axis=1))",1.0,0.0,0.29487616,0.7665736,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*7.287445382650809/array_x), axis=1)",0.7093669,0.0,0.34244165,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*abs(-(np.exp(2.8089333528650196-array_x)))), axis=1)",0.7752773,0.0,0.3423536,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*array_x)+np.cos(2*np.pi*np.sin(2*np.pi*9.570238036256676)+array_x)*1.9774603985857921+np.log(abs(array_x))+np.sqrt(abs(9.033488170479899))-np.sqrt(abs(array_x)), axis=1)",0.77146655,0.0,0.87782145,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*array_x*6.656733252450376+np.sin(2*np.pi*np.square(8.114098852687885))), axis=1)",0.983177,0.0,0.19801939,0.9386287,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*array_x/1.1842357695517394), axis=1)",0.44037494,0.0,0.31374508,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*np.exp(7.866656872569009/5.2164625580888035+array_x+3.2898107944892105)), axis=1)",0.9081889,0.0,0.15676312,0.9598025,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*np.exp(array_x))-1.851368403251925, axis=1)",1.0,0.0,0.3833049,0.9188813,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*np.exp(np.square(6.254201719123053-array_x)))-np.exp(np.round(array_x*6.346421242788125)), axis=1)",0.6573714,0.0,4.123718e-15,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*np.round(10*(np.sqrt(abs(6.542106113186388))))+np.sin(2*np.pi*np.square(10*(array_x)))), axis=1)",1.0,0.0,0.06250068,0.765626,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*np.sin(2*np.pi*9.331300002906056*array_x))-np.sin(2*np.pi*1.4930621391918084/array_x), axis=1)",0.87624294,0.0,0.40069088,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*np.sin(2*np.pi*array_x)-2.884167966185225), axis=1)",1.0,0.0,0.36981046,0.9879031,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sin(2*np.pi*np.square(np.cos(2*np.pi*np.sin(2*np.pi*np.round(9.392697985358366))*array_x))+array_x-6.360231829934126/7.440398571345025-array_x/np.sin(2*np.pi*7.924498788932919)), axis=1)",0.26224893,0.0,0.41332683,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))-np.cos(2*np.pi*array_x))), axis=1)",0.3930778,0.0,0.19046938,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(1/(6.326413451655682)))+np.sqrt(abs(np.log(abs(array_x))))+2.701538412319586-array_x-np.round(7.222196292627984), axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(1/(3.7558446067990428)))+np.sqrt(abs(np.log(abs(array_x))))+1.8961602193852816-array_x-np.round(5.205724365579257), axis=1)))",1.0,0.0,0.38285485,0.5000062,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(4.659351721758663*np.round(np.cos(2*np.pi*np.square(np.sin(2*np.pi*2.0156095637211955/(np.array(range(1, array_x.shape[1]+1)))*array_x))))+9.374950923907372)), axis=1)",0.72850835,0.0,0.13267165,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(5.199055014238164+np.sqrt(abs(array_x))*np.cos(2*np.pi*6.935326485057898)/array_x-array_x-array_x)), axis=1)",0.73279905,0.0,0.7651972,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(7.105155490150811/np.log(abs(np.square(6.222238934105101*array_x)))))*2.384774251709215, axis=1)",0.8168892,0.536677,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(7.383538220306345))/np.sqrt(abs(array_x))-1.8914905817834495, axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(8.50023031680487))/np.sqrt(abs(array_x))-7.874926557151227, axis=1)))",1.0,4.5191108e-08,3.132976e-08,0.0021130766,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(9.24145534467598*array_x))+np.cumsum(array_x, axis=1), axis=1)",0.1346529,0.001290266,0.025425304,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(9.699349551555427/np.sqrt(abs(8.06900976482896-np.exp(7.514231274631797+array_x))))), axis=1)",0.0,0.017286442,0.058623467,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.cos(2*np.pi*1.2052674376789594-array_x/4.385023039996042)+np.cos(2*np.pi*10*(np.cos(2*np.pi*np.square(np.log(abs(array_x))))-np.log(abs(9.18316839834722)))))), axis=1)",1.0,0.0,0.41842636,0.91266537,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.cos(2*np.pi*8.939572937061989*np.exp(array_x)))), axis=1)",0.98546356,0.0,0.63431495,0.98161507,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.exp(np.cos(2*np.pi*np.exp(array_x)))))+np.sqrt(abs(3.556980719341455+np.sin(2*np.pi*6.6089845196853485/array_x))), axis=1)",0.8397128,0.0,0.56025016,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.exp(np.sin(2*np.pi*1/(array_x))/2.8637561051006344)*np.cos(2*np.pi*np.round(2.142756303882717)-array_x))), axis=1)+10*(np.sin(2*np.pi*np.mean(np.sqrt(abs(np.exp(np.sin(2*np.pi*1/(array_x))/5.314791999913177)*np.cos(2*np.pi*np.round(4.381526895848096)-array_x))), axis=1)))",1.0,0.0,0.40114373,0.56274825,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.log(abs((np.array(range(1, array_x.shape[1]+1)))*array_x-8.244725725636636))))+np.sqrt(abs((np.array(range(1, array_x.shape[1]+1)))*array_x))*1.434898282650111, axis=1)",0.34552112,0.0,0.77397376,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.round(np.exp(6.358434506725886)/10*(np.sqrt(abs(array_x*6.48104302645139)))-array_x-array_x*np.sqrt(abs(8.954467456122334))))), axis=1)",0.4839708,0.0,0.7391313,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.sin(2*np.pi*np.sin(2*np.pi*array_x+6.321703973195577))))-np.sqrt(abs(4.916249907201404))-np.round(np.square(array_x))-np.cos(2*np.pi*array_x)*1.859432142959152, axis=1)+np.sin(2*np.pi*np.mean(np.sqrt(abs(np.sin(2*np.pi*np.sin(2*np.pi*array_x+7.567750619377122))))-np.sqrt(abs(1.4569654956582774))-np.round(np.square(array_x))-np.cos(2*np.pi*array_x)*3.0136358679137403, axis=1))",0.16814677,0.026919967,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.sqrt(abs(8.935847057372472))+array_x*array_x+8.297493807000855-4.897535583303101)), axis=1)",0.012806409,0.0,0.70343876,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.sqrt(abs(9.267989533262286+array_x)))), axis=1)",0.0,0.006955343,0.028223466,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.sqrt(abs(np.sqrt(abs(array_x))/3.612338331233401)))), axis=1)",0.6197415,0.0,0.8117931,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.sqrt(abs(np.square((np.array(range(1, array_x.shape[1]+1)))*array_x)/4.907746517065808)), axis=1)",0.33097833,0.0,0.8502227,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(7.5865538803547965-array_x/np.sqrt(abs(10*(8.321491763492258)))-1.1731946997889315*4.5939821591232395/-(9.840776805585227*array_x)/array_x+8.491361447827947), axis=1)+10*(np.sin(2*np.pi*np.mean(np.square(7.627929926354847-array_x/np.sqrt(abs(10*(7.411867941998791)))-5.92477049828519*5.292012264198466/-(5.073680353887572*array_x)/array_x+1.659736590383908), axis=1)))",1.0,0.0,0.09371035,0.4398883,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(8.967642307232506*np.square((np.array(range(1, array_x.shape[1]+1)))))+np.square(np.square(7.821713573168337+array_x)+np.square(1/(7.667034492734473))), axis=1)+10*(np.sin(2*np.pi*np.mean(np.square(9.37124334896317*np.square((np.array(range(1, array_x.shape[1]+1)))))+np.square(np.square(3.0778054483541926+array_x)+np.square(1/(7.682213861462575))), axis=1)))",0.14590082,0.0,0.025465712,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(array_x)+1/(7.542789970211776+array_x), axis=1)+np.sin(2*np.pi*np.mean(np.square(array_x)+1/(5.750744972639374+array_x), axis=1))",0.42217892,0.0,0.8940188,0.9590397,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(array_x+7.125159304972235/1.3673248009653087), axis=1)+np.sin(2*np.pi*np.mean(np.square(array_x+6.61244244723415/1.7947610674868186), axis=1))",1.0,0.0,0.14465007,0.11620338,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(np.exp(array_x-3.8542250210733284*1.136306139909995)-1.2944450386324058)-6.2634758991394355, axis=1)",1.0,0.0,0.0828916,0.27649766,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(np.log(abs(4.302391295058481))+np.round(array_x)), axis=1)",0.0,0.0,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(np.sin(2*np.pi*3.151768599039478-array_x*6.371389823921968)-array_x/np.sqrt(abs(4.2293863381997205))), axis=1)",0.6989809,0.0,0.50303745,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.mean(np.square(np.square(np.round(np.exp(array_x*array_x))))-2.3761178210112153, axis=1)",0.0,0.0,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(10*(-(np.log(abs(np.sum(5.5772980254068205+array_x, axis=1)/3.945219379476412))))-np.sin(2*np.pi*np.sqrt(abs(np.log(abs(-(np.sqrt(abs(1.452974026742964)))))))))",1.0,0.0,0.0,0.25,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(10*(np.amax(array_x*array_x, axis=1)))+np.sin(2*np.pi*np.round(10*(np.amax(array_x*array_x, axis=1))))",0.0,0.0,1.0,0.17142858,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.amax(1.0888580622644395+array_x*4.426692406951916*1.4591684624558066+array_x+7.814357021137271/np.log(abs(np.sqrt(abs(np.exp(array_x))))), axis=1))",1.0,0.0,0.260989,0.1359447,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(1.2823738153594397/array_x/7.247127838882266, axis=1))",0.97209036,0.0,1.0,0.9274693,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(1/(np.log(abs(6.749793579849153/array_x)))+np.sin(2*np.pi*7.435196290134868*array_x)/3.361935916353641/array_x-array_x-6.435292927886014, axis=1))",1.0,0.5,0.5,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(9.683269853557398-np.exp(array_x)+6.776487221301509, axis=1))",1.0,0.0,0.017095266,0.84628874,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(array_x+np.round(array_x*3.0387427712961905)-4.2684864322118*2.5570824546520465, axis=1))",1.0,0.0,0.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(np.cos(2*np.pi*np.exp(4.080439019308509+array_x))-np.sqrt(abs(7.127437644470902)), axis=1))",1.0,1.0,1.0,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(np.log(abs(1.1072411494320336+array_x+1.5531134162214362/array_x-9.439861622791083+2.2790766907452538)), axis=1))",1.0,0.0,0.75,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(np.sin(2*np.pi*-(array_x))*2.71633868369622*8.913522659397367, axis=1))",0.41666666,0.0,0.33333334,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(np.sin(2*np.pi*array_x+np.cos(2*np.pi*array_x))+np.cumsum(np.square(array_x/np.cos(2*np.pi*5.55162539518924))*np.log(abs(8.305514369417871)), axis=1), axis=1))",1.0,0.0,1.0,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(np.square(4.6145107305340725-array_x*2.268843751675646/5.019753552932675+9.691828053437682), axis=1))",0.125,0.0,0.25,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.round(np.mean(np.square(array_x+5.477673781227266), axis=1))",1.0,0.0,0.25,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.sin(2*np.pi*np.mean(np.sqrt(abs(9.549373983592307))*array_x+2.329355481172255, axis=1))",1.0,0.00680268,0.10139647,7.287138e-05,0.61576945,0.040916305,0.3855303,0.7412047
"np.sqrt(abs(np.mean(np.round(array_x)+np.sin(2*np.pi*array_x)/10*(4.512389032371862), axis=1)+1.4925523718765685))",1.0,0.08483786,0.7444887,0.42264193,0.61576945,0.040916305,0.3855303,0.7412047
"np.sqrt(abs(np.round(10*(np.sqrt(abs(np.sum(np.square(8.428760035694546)+8.135287587612286/array_x, axis=1)))))))+10*(np.sin(2*np.pi*np.sqrt(abs(np.round(10*(np.sqrt(abs(np.sum(np.square(6.532837567362743)+1.0094705712711436/array_x, axis=1)))))))))",0.75202894,0.0,0.9500904,0.96880203,0.61576945,0.040916305,0.3855303,0.7412047
"np.sqrt(abs(np.sum(2.8487855579574366/10*(abs(array_x*array_x/4.144034584511844)), axis=1)))",0.028262109,0.0031980036,0.70260787,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.sqrt(abs(np.sum(np.round(4.608510517149508)*6.26343414661522-np.exp(array_x), axis=1)))",0.52123153,0.0,0.47442207,0.96424186,0.61576945,0.040916305,0.3855303,0.7412047
"np.square(np.mean((np.array(range(1, array_x.shape[1]+1)))*array_x*np.cumsum((np.array(range(1, array_x.shape[1]+1)))*array_x, axis=1), axis=1))",0.0,0.028191995,1.0,0.16130969,0.61576945,0.040916305,0.3855303,0.7412047
"np.square(np.square(10*(np.square(np.sum(array_x, axis=1)-3.718874506033183)))+6.630119372521337)+np.sin(2*np.pi*np.square(np.square(10*(np.square(np.sum(array_x, axis=1)-5.239338920234327)))+8.110456125548396))",1.0,0.09605448,0.18058431,0.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.square(np.square(np.log(abs(8.978109955631275))-np.mean(array_x*array_x*2.857861913113008-1.5310723189095774-1.6377169649507533/array_x, axis=1)))",0.015738612,0.0,9.7850745e-05,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.square(np.sum(1.388382917974996+np.cos(2*np.pi*array_x+5.075371483512764), axis=1))",0.47576252,0.0,0.26198113,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.square(np.sum(8.160823328215962+array_x, axis=1)/np.sin(2*np.pi*8.359431204674118))+1.4882003551051373",0.0,0.00950813,0.035280384,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.square(np.sum(np.sqrt(abs(1/(array_x))), axis=1))",0.0,0.052611336,0.04702986,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.sum(np.cumsum(np.sin(2*np.pi*array_x)/2.691429110990583-np.sqrt(abs(10*(np.square(np.exp(array_x))))), axis=1), axis=1)",1.0,0.0,0.0042459113,0.9021022,0.61576945,0.040916305,0.3855303,0.7412047
"np.sum(np.exp(9.257052543427543+array_x*np.sqrt(abs(4.469004662352649))), axis=1)",0.0,0.027457928,0.06669756,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.sum(np.sin(2*np.pi*array_x+array_x-np.square(np.log(abs(array_x))+2.6264935380184102)+np.sqrt(abs(array_x/5.982147528345519))+6.305044144392298), axis=1)+np.sin(2*np.pi*np.sum(np.sin(2*np.pi*array_x+array_x-np.square(np.log(abs(array_x))+3.6338765078998696)+np.sqrt(abs(array_x/3.8869504669212067))+8.96069167178159), axis=1))",0.5927667,0.0,0.5423511,1.0,0.61576945,0.040916305,0.3855303,0.7412047
"np.sum(np.square(1.5165463156062318-np.sin(2*np.pi*array_x))-1.5487728965965366, axis=1)",0.46103963,0.0,0.23910955,1.0,0.61576945,0.040916305,0.3855303,0.7412047
